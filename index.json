{
  "api/index.html": {
    "href": "api/index.html",
    "title": "Explore the APIs | XPlat Windows APIs",
    "keywords": "Explore the APIs Here you'll find all of the generated code documentation for the XPlat Windows APIs projects, similar to what you might find on Microsoft Docs! This documentation is designed to show you how each component of XPlat Windows APIs is constructed and provide a reference for you when building your projects."
  },
  "api/XPlat.ApplicationModel.DataTransfer.html": {
    "href": "api/XPlat.ApplicationModel.DataTransfer.html",
    "title": "Namespace XPlat.ApplicationModel.DataTransfer | XPlat Windows APIs",
    "keywords": "Namespace XPlat.ApplicationModel.DataTransfer Interfaces IDataPackage Contains the data that a user wants to exchange with another app. IDataPackageView A read-only version of a DataPackage. Apps that receive shared content get this object when acquiring content."
  },
  "api/XPlat.ApplicationModel.DataTransfer.IDataPackage.html": {
    "href": "api/XPlat.ApplicationModel.DataTransfer.IDataPackage.html",
    "title": "Interface IDataPackage | XPlat Windows APIs",
    "keywords": "Interface IDataPackage Contains the data that a user wants to exchange with another app. Namespace : XPlat.ApplicationModel.DataTransfer Assembly : XPlat.ApplicationModel.DataTransfer.dll Syntax public interface IDataPackage Methods | Improve this Doc View Source SetText(String) Sets the text that a DataPackage contains. Declaration void SetText(string value) Parameters Type Name Description System.String value The text."
  },
  "api/XPlat.ApplicationModel.DataTransfer.IDataPackageView.html": {
    "href": "api/XPlat.ApplicationModel.DataTransfer.IDataPackageView.html",
    "title": "Interface IDataPackageView | XPlat Windows APIs",
    "keywords": "Interface IDataPackageView A read-only version of a DataPackage. Apps that receive shared content get this object when acquiring content. Namespace : XPlat.ApplicationModel.DataTransfer Assembly : XPlat.ApplicationModel.DataTransfer.dll Syntax public interface IDataPackageView Methods | Improve this Doc View Source GetTextAsync() Gets the text in the DataPackageView object. Declaration Task<string> GetTextAsync() Returns Type Description Task < System.String > The text."
  },
  "api/XPlat.ApplicationModel.html": {
    "href": "api/XPlat.ApplicationModel.html",
    "title": "Namespace XPlat.ApplicationModel | XPlat Windows APIs",
    "keywords": "Namespace XPlat.ApplicationModel Structs PackageVersion Represents the package version info. Interfaces IPackage Provides information about a package. IPackage2 Provides information about a package. IPackage3 Provides information about a package. IPackageId Provides package identification info, such as name, version, and publisher."
  },
  "api/XPlat.ApplicationModel.IPackage.html": {
    "href": "api/XPlat.ApplicationModel.IPackage.html",
    "title": "Interface IPackage | XPlat Windows APIs",
    "keywords": "Interface IPackage Provides information about a package. Namespace : XPlat.ApplicationModel Assembly : XPlat.ApplicationModel.dll Syntax public interface IPackage Properties | Improve this Doc View Source Dependencies Gets the packages on which the current package depends. Declaration IReadOnlyList<IPackage> Dependencies { get; } Property Value Type Description IReadOnlyList < IPackage > | Improve this Doc View Source Id Gets the package identity of the current package. Declaration IPackageId Id { get; } Property Value Type Description IPackageId | Improve this Doc View Source InstalledLocation Gets the location of the installed package. Declaration IStorageFolder InstalledLocation { get; } Property Value Type Description IStorageFolder"
  },
  "api/XPlat.ApplicationModel.IPackage2.html": {
    "href": "api/XPlat.ApplicationModel.IPackage2.html",
    "title": "Interface IPackage2 | XPlat Windows APIs",
    "keywords": "Interface IPackage2 Provides information about a package. Namespace : XPlat.ApplicationModel Assembly : XPlat.ApplicationModel.dll Syntax public interface IPackage2 Properties | Improve this Doc View Source DisplayName Gets the display name of the package. Declaration string DisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source IsDevelopmentMode Indicates whether the package is installed in development mode. Declaration bool IsDevelopmentMode { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Logo Gets the logo of the package. Declaration Uri Logo { get; } Property Value Type Description Uri"
  },
  "api/XPlat.ApplicationModel.IPackage3.html": {
    "href": "api/XPlat.ApplicationModel.IPackage3.html",
    "title": "Interface IPackage3 | XPlat Windows APIs",
    "keywords": "Interface IPackage3 Provides information about a package. Namespace : XPlat.ApplicationModel Assembly : XPlat.ApplicationModel.dll Syntax public interface IPackage3 Properties | Improve this Doc View Source InstalledDate Gets the date on which the application package was installed or last updated. Declaration DateTimeOffset InstalledDate { get; } Property Value Type Description DateTimeOffset"
  },
  "api/XPlat.ApplicationModel.IPackageId.html": {
    "href": "api/XPlat.ApplicationModel.IPackageId.html",
    "title": "Interface IPackageId | XPlat Windows APIs",
    "keywords": "Interface IPackageId Provides package identification info, such as name, version, and publisher. Namespace : XPlat.ApplicationModel Assembly : XPlat.ApplicationModel.dll Syntax public interface IPackageId Properties | Improve this Doc View Source FullName Gets the full name of the package. Declaration string FullName { get; } Property Value Type Description System.String | Improve this Doc View Source Name Gets the name of the package. Declaration string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Version Gets the package version info. Declaration PackageVersion Version { get; } Property Value Type Description PackageVersion"
  },
  "api/XPlat.ApplicationModel.PackageVersion.html": {
    "href": "api/XPlat.ApplicationModel.PackageVersion.html",
    "title": "Struct PackageVersion | XPlat Windows APIs",
    "keywords": "Struct PackageVersion Represents the package version info. Namespace : XPlat.ApplicationModel Assembly : XPlat.ApplicationModel.dll Syntax public struct PackageVersion Fields | Improve this Doc View Source Build The build version number of the package. Declaration public ushort Build Field Value Type Description System.UInt16 | Improve this Doc View Source Major The major version number of the package. Declaration public ushort Major Field Value Type Description System.UInt16 | Improve this Doc View Source Minor The minor version number of the package. Declaration public ushort Minor Field Value Type Description System.UInt16 | Improve this Doc View Source Revision The revision version number of the package. Declaration public ushort Revision Field Value Type Description System.UInt16 Methods | Improve this Doc View Source Parse(String) Parses a string version number to a PackageVersion . Declaration public static PackageVersion Parse(string input) Parameters Type Name Description System.String input The version number. Returns Type Description PackageVersion The PackageVersion . Exceptions Type Condition System.ArgumentNullException Thrown if input is null . System.ArgumentException Thrown if input is not a valid version number. | Improve this Doc View Source ToString() Returns the fully qualified type name of this instance. Declaration public override string ToString() Returns Type Description System.String A System.String containing a fully qualified type name. Operators | Improve this Doc View Source Implicit(String to PackageVersion) Allows conversion of a to the PackageVersion without direct casting. Declaration public static implicit operator PackageVersion(string versionString) Parameters Type Name Description System.String versionString The version number. Returns Type Description PackageVersion The PackageVersion . | Improve this Doc View Source Implicit(Version to PackageVersion) Allows conversion of a to the PackageVersion without direct casting. Declaration public static implicit operator PackageVersion(Version version) Parameters Type Name Description Version version The . Returns Type Description PackageVersion The PackageVersion ."
  },
  "api/XPlat.Device.Display.html": {
    "href": "api/XPlat.Device.Display.html",
    "title": "Namespace XPlat.Device.Display | XPlat Windows APIs",
    "keywords": "Namespace XPlat.Device.Display Interfaces IDisplayRequest Represents a display request."
  },
  "api/XPlat.Device.Display.IDisplayRequest.html": {
    "href": "api/XPlat.Device.Display.IDisplayRequest.html",
    "title": "Interface IDisplayRequest | XPlat Windows APIs",
    "keywords": "Interface IDisplayRequest Represents a display request. Namespace : XPlat.Device.Display Assembly : XPlat.Device.Display.dll Syntax public interface IDisplayRequest Methods | Improve this Doc View Source RequestActive() Activates a display request. Declaration void RequestActive() | Improve this Doc View Source RequestRelease() Deactivates a display request. Declaration void RequestRelease()"
  },
  "api/XPlat.Device.Extensions.html": {
    "href": "api/XPlat.Device.Extensions.html",
    "title": "Namespace XPlat.Device.Extensions | XPlat Windows APIs",
    "keywords": "Namespace XPlat.Device.Extensions Classes LaunchQuerySupportStatusExtensions Defines a collection of extensions for the LaunchQuerySupportStatus enum."
  },
  "api/XPlat.Device.Extensions.LaunchQuerySupportStatusExtensions.html": {
    "href": "api/XPlat.Device.Extensions.LaunchQuerySupportStatusExtensions.html",
    "title": "Class LaunchQuerySupportStatusExtensions | XPlat Windows APIs",
    "keywords": "Class LaunchQuerySupportStatusExtensions Defines a collection of extensions for the LaunchQuerySupportStatus enum. Inheritance System.Object LaunchQuerySupportStatusExtensions Namespace : XPlat.Device.Extensions Assembly : XPlat.Device.Launcher.dll Syntax public static class LaunchQuerySupportStatusExtensions : object"
  },
  "api/XPlat.Device.Geolocation.BasicGeoposition.html": {
    "href": "api/XPlat.Device.Geolocation.BasicGeoposition.html",
    "title": "Struct BasicGeoposition | XPlat Windows APIs",
    "keywords": "Struct BasicGeoposition The basic information to describe a geographic position. Namespace : XPlat.Device.Geolocation Assembly : XPlat.Device.Geolocation.dll Syntax public struct BasicGeoposition Constructors | Improve this Doc View Source BasicGeoposition(Double, Double, Double) Initializes a new instance of the BasicGeoposition struct. Declaration public BasicGeoposition(double latitude, double longitude, double altitude) Parameters Type Name Description System.Double latitude The latitude of the geographic position. System.Double longitude The longitude of the geographic position. System.Double altitude The altitude of the geographic position. Fields | Improve this Doc View Source Altitude The altitude of the geographic position in meters. Declaration public double Altitude Field Value Type Description System.Double | Improve this Doc View Source Latitude The latitude of the geographic position. The valid range of latitude values is from -90.0 to 90.0 degrees. Declaration public double Latitude Field Value Type Description System.Double | Improve this Doc View Source Longitude The longitude of the geographic position. The valid range of longitude values is from -180.0 to 180.0 degrees. Declaration public double Longitude Field Value Type Description System.Double"
  },
  "api/XPlat.Device.Geolocation.Extensions.GeolocationAccessStatusExtensions.html": {
    "href": "api/XPlat.Device.Geolocation.Extensions.GeolocationAccessStatusExtensions.html",
    "title": "Class GeolocationAccessStatusExtensions | XPlat Windows APIs",
    "keywords": "Class GeolocationAccessStatusExtensions Defines a collection of extensions for the GeolocationAccessStatus enum. Inheritance System.Object GeolocationAccessStatusExtensions Namespace : XPlat.Device.Geolocation.Extensions Assembly : XPlat.Device.Geolocation.dll Syntax public static class GeolocationAccessStatusExtensions : object"
  },
  "api/XPlat.Device.Geolocation.Extensions.html": {
    "href": "api/XPlat.Device.Geolocation.Extensions.html",
    "title": "Namespace XPlat.Device.Geolocation.Extensions | XPlat Windows APIs",
    "keywords": "Namespace XPlat.Device.Geolocation.Extensions Classes GeolocationAccessStatusExtensions Defines a collection of extensions for the GeolocationAccessStatus enum. PositionStatusExtensions Defines a collection of extensions for the PositionStatus enum."
  },
  "api/XPlat.Device.Geolocation.Extensions.PositionStatusExtensions.html": {
    "href": "api/XPlat.Device.Geolocation.Extensions.PositionStatusExtensions.html",
    "title": "Class PositionStatusExtensions | XPlat Windows APIs",
    "keywords": "Class PositionStatusExtensions Defines a collection of extensions for the PositionStatus enum. Inheritance System.Object PositionStatusExtensions Namespace : XPlat.Device.Geolocation.Extensions Assembly : XPlat.Device.Geolocation.dll Syntax public static class PositionStatusExtensions : object"
  },
  "api/XPlat.Device.Geolocation.Geocoordinate.html": {
    "href": "api/XPlat.Device.Geolocation.Geocoordinate.html",
    "title": "Class Geocoordinate | XPlat Windows APIs",
    "keywords": "Class Geocoordinate Contains the information for identifying a geographic location. Inheritance System.Object Geocoordinate Implements IGeocoordinate Namespace : XPlat.Device.Geolocation Assembly : XPlat.Device.Geolocation.dll Syntax public class Geocoordinate : object, IGeocoordinate Constructors | Improve this Doc View Source Geocoordinate() Initializes a new instance of the Geocoordinate class. Declaration public Geocoordinate() Properties | Improve this Doc View Source Accuracy Gets or sets the accuracy of the location in meters. Declaration public double Accuracy { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Altitude Gets or sets the altitude of the location, in meters. Declaration public double Altitude { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Heading Gets or sets the current heading in degrees relative to true north. Declaration public double Heading { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Latitude Gets or sets the latitude in degrees. The valid range of values is from -90.0 to 90.0. Declaration public double Latitude { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Longitude Gets or sets the longitude in degrees. The valid range of values is from -180.0 to 180.0. Declaration public double Longitude { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Point Gets or sets the location of the Geocoordinate. Declaration public Geopoint Point { get; set; } Property Value Type Description Geopoint | Improve this Doc View Source Speed Gets or sets the speed in meters per second. Declaration public double Speed { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Timestamp Gets or sets the system time at which the location was determined. Declaration public DateTimeOffset Timestamp { get; set; } Property Value Type Description DateTimeOffset Implements IGeocoordinate"
  },
  "api/XPlat.Device.Geolocation.GeolocationAccessStatus.html": {
    "href": "api/XPlat.Device.Geolocation.GeolocationAccessStatus.html",
    "title": "Enum GeolocationAccessStatus | XPlat Windows APIs",
    "keywords": "Enum GeolocationAccessStatus Indicates if your app has permission to access location data. Namespace : XPlat.Device.Geolocation Assembly : XPlat.Device.Geolocation.dll Syntax public enum GeolocationAccessStatus : int Fields Name Description Allowed Permission to access location was granted. Denied Permission to access location was denied. Unspecified Permission to access location was not specified."
  },
  "api/XPlat.Device.Geolocation.GeolocatorException.html": {
    "href": "api/XPlat.Device.Geolocation.GeolocatorException.html",
    "title": "Class GeolocatorException | XPlat Windows APIs",
    "keywords": "Class GeolocatorException Defines an exception for an error in the IGeolocator . Inheritance System.Object GeolocatorException Namespace : XPlat.Device.Geolocation Assembly : XPlat.Device.Geolocation.dll Syntax public class GeolocatorException : Exception Constructors | Improve this Doc View Source GeolocatorException() Initializes a new instance of the GeolocatorException class. Declaration public GeolocatorException() | Improve this Doc View Source GeolocatorException(String) Initializes a new instance of the GeolocatorException class with a specified error message. Declaration public GeolocatorException(string message) Parameters Type Name Description System.String message The error message that explains the reason for the exception. | Improve this Doc View Source GeolocatorException(String, Exception) Initializes a new instance of the GeolocatorException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public GeolocatorException(string message, Exception innerException) Parameters Type Name Description System.String message The error message that explains the reason for the exception. Exception innerException The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified."
  },
  "api/XPlat.Device.Geolocation.Geopoint.html": {
    "href": "api/XPlat.Device.Geolocation.Geopoint.html",
    "title": "Class Geopoint | XPlat Windows APIs",
    "keywords": "Class Geopoint Describes a geographic point. Inheritance System.Object Geopoint Implements IGeopoint Namespace : XPlat.Device.Geolocation Assembly : XPlat.Device.Geolocation.dll Syntax public class Geopoint : object, IGeopoint Constructors | Improve this Doc View Source Geopoint(BasicGeoposition) Initializes a new instance of the Geopoint class. Declaration public Geopoint(BasicGeoposition position) Parameters Type Name Description BasicGeoposition position The position. Properties | Improve this Doc View Source Position Gets or sets the position of a geographic point. Declaration public BasicGeoposition Position { get; set; } Property Value Type Description BasicGeoposition Implements IGeopoint"
  },
  "api/XPlat.Device.Geolocation.Geoposition.html": {
    "href": "api/XPlat.Device.Geolocation.Geoposition.html",
    "title": "Class Geoposition | XPlat Windows APIs",
    "keywords": "Class Geoposition Represents a location that may contain latitude and longitude data. Inheritance System.Object Geoposition Implements IGeoposition Namespace : XPlat.Device.Geolocation Assembly : XPlat.Device.Geolocation.dll Syntax public class Geoposition : object, IGeoposition Constructors | Improve this Doc View Source Geoposition() Initializes a new instance of the Geoposition class. Declaration public Geoposition() | Improve this Doc View Source Geoposition(Geocoordinate) Initializes a new instance of the Geoposition class. Declaration public Geoposition(Geocoordinate coordinate) Parameters Type Name Description Geocoordinate coordinate The coordinate. Properties | Improve this Doc View Source Coordinate Gets or sets the latitude and longitude associated with a geographic location. Declaration public Geocoordinate Coordinate { get; set; } Property Value Type Description Geocoordinate Implements IGeoposition"
  },
  "api/XPlat.Device.Geolocation.html": {
    "href": "api/XPlat.Device.Geolocation.html",
    "title": "Namespace XPlat.Device.Geolocation | XPlat Windows APIs",
    "keywords": "Namespace XPlat.Device.Geolocation Classes Geocoordinate Contains the information for identifying a geographic location. GeolocatorException Defines an exception for an error in the IGeolocator . Geopoint Describes a geographic point. Geoposition Represents a location that may contain latitude and longitude data. PositionChangedEventArgs Provides data for the PositionChanged event. StatusChangedEventArgs Provides information for the StatusChanged event. Structs BasicGeoposition The basic information to describe a geographic position. Interfaces IGeocoordinate Contains the information for identifying a geographic location. IGeolocator Provides access to the current geographic location. IGeopoint Describes a geographic point. IGeoposition Represents a location that may contain latitude and longitude data. IStatusChangedEventArgs Provides information for the StatusChanged event. Enums GeolocationAccessStatus Indicates if your app has permission to access location data. PositionAccuracy Indicates the requested accuracy level for the location data that the application uses. PositionStatus Indicates the ability of the Geolocator object to provide location data."
  },
  "api/XPlat.Device.Geolocation.IGeocoordinate.html": {
    "href": "api/XPlat.Device.Geolocation.IGeocoordinate.html",
    "title": "Interface IGeocoordinate | XPlat Windows APIs",
    "keywords": "Interface IGeocoordinate Contains the information for identifying a geographic location. Namespace : XPlat.Device.Geolocation Assembly : XPlat.Device.Geolocation.dll Syntax public interface IGeocoordinate Properties | Improve this Doc View Source Accuracy Gets or sets the accuracy of the location in meters. Declaration double Accuracy { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Altitude Gets or sets the altitude of the location, in meters. Declaration double Altitude { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Heading Gets or sets the current heading in degrees relative to true north. Declaration double Heading { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Latitude Gets or sets the latitude in degrees. The valid range of values is from -90.0 to 90.0. Declaration double Latitude { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Longitude Gets or sets the longitude in degrees. The valid range of values is from -180.0 to 180.0. Declaration double Longitude { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Point Gets or sets the location of the Geocoordinate. Declaration Geopoint Point { get; set; } Property Value Type Description Geopoint | Improve this Doc View Source Speed Gets or sets the speed in meters per second. Declaration double Speed { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Timestamp Gets or sets the system time at which the location was determined. Declaration DateTimeOffset Timestamp { get; set; } Property Value Type Description DateTimeOffset"
  },
  "api/XPlat.Device.Geolocation.IGeolocator.html": {
    "href": "api/XPlat.Device.Geolocation.IGeolocator.html",
    "title": "Interface IGeolocator | XPlat Windows APIs",
    "keywords": "Interface IGeolocator Provides access to the current geographic location. Namespace : XPlat.Device.Geolocation Assembly : XPlat.Device.Geolocation.dll Syntax public interface IGeolocator Properties | Improve this Doc View Source DesiredAccuracy Gets or sets the accuracy level at which the Geolocator provides location updates. Declaration PositionAccuracy DesiredAccuracy { get; set; } Property Value Type Description PositionAccuracy | Improve this Doc View Source DesiredAccuracyInMeters Gets or sets the desired accuracy in meters for data returned from the location service. Declaration uint DesiredAccuracyInMeters { get; set; } Property Value Type Description System.UInt32 | Improve this Doc View Source LastKnownPosition Gets the last known position recorded by the Geolocator. Declaration Geoposition LastKnownPosition { get; } Property Value Type Description Geoposition | Improve this Doc View Source LocationStatus Gets the status that indicates the ability of the Geolocator to provide location updates. Declaration PositionStatus LocationStatus { get; } Property Value Type Description PositionStatus | Improve this Doc View Source MovementThreshold Gets or sets the distance of movement, in meters, relative to the coordinate from the last PositionChanged event, that is required for the Geolocator to raise a PositionChanged event. Declaration double MovementThreshold { get; set; } Property Value Type Description System.Double | Improve this Doc View Source ReportInterval Gets or sets the requested minimum time interval between location updates, in milliseconds. If your application requires updates infrequently, set this value so that location services can conserve power by calculating location only when needed. Declaration uint ReportInterval { get; set; } Property Value Type Description System.UInt32 Methods | Improve this Doc View Source GetGeopositionAsync() Starts an asynchronous operation to retrieve the current location of the device. Declaration Task<Geoposition> GetGeopositionAsync() Returns Type Description Task < Geoposition > An asynchronous operation that, upon completion, returns a Geoposition marking the found location. | Improve this Doc View Source GetGeopositionAsync(TimeSpan, TimeSpan) Starts an asynchronous operation to retrieve the current location of the device. Declaration Task<Geoposition> GetGeopositionAsync(TimeSpan maximumAge, TimeSpan timeout) Parameters Type Name Description TimeSpan maximumAge The maximum acceptable age of cached location data. TimeSpan timeout The timeout. Returns Type Description Task < Geoposition > An asynchronous operation that, upon completion, returns a Geoposition marking the found location. | Improve this Doc View Source RequestAccessAsync() Requests permission to access location data. Declaration Task<GeolocationAccessStatus> RequestAccessAsync() Returns Type Description Task < GeolocationAccessStatus > A GeolocationAccessStatus that indicates if permission to location data has been granted. Events | Improve this Doc View Source PositionChanged Raised when the location is updated. Declaration event TypedEventHandler<IGeolocator, PositionChangedEventArgs> PositionChanged Event Type Type Description TypedEventHandler < IGeolocator , PositionChangedEventArgs > | Improve this Doc View Source StatusChanged Raised when the ability of the Geolocator to provide updated location changes. Declaration event TypedEventHandler<IGeolocator, StatusChangedEventArgs> StatusChanged Event Type Type Description TypedEventHandler < IGeolocator , StatusChangedEventArgs >"
  },
  "api/XPlat.Device.Geolocation.IGeopoint.html": {
    "href": "api/XPlat.Device.Geolocation.IGeopoint.html",
    "title": "Interface IGeopoint | XPlat Windows APIs",
    "keywords": "Interface IGeopoint Describes a geographic point. Namespace : XPlat.Device.Geolocation Assembly : XPlat.Device.Geolocation.dll Syntax public interface IGeopoint Properties | Improve this Doc View Source Position Gets or sets the position of a geographic point. Declaration BasicGeoposition Position { get; set; } Property Value Type Description BasicGeoposition"
  },
  "api/XPlat.Device.Geolocation.IGeoposition.html": {
    "href": "api/XPlat.Device.Geolocation.IGeoposition.html",
    "title": "Interface IGeoposition | XPlat Windows APIs",
    "keywords": "Interface IGeoposition Represents a location that may contain latitude and longitude data. Namespace : XPlat.Device.Geolocation Assembly : XPlat.Device.Geolocation.dll Syntax public interface IGeoposition Properties | Improve this Doc View Source Coordinate Gets or sets the latitude and longitude associated with a geographic location. Declaration Geocoordinate Coordinate { get; set; } Property Value Type Description Geocoordinate"
  },
  "api/XPlat.Device.Geolocation.IStatusChangedEventArgs.html": {
    "href": "api/XPlat.Device.Geolocation.IStatusChangedEventArgs.html",
    "title": "Interface IStatusChangedEventArgs | XPlat Windows APIs",
    "keywords": "Interface IStatusChangedEventArgs Provides information for the StatusChanged event. Namespace : XPlat.Device.Geolocation Assembly : XPlat.Device.Geolocation.dll Syntax public interface IStatusChangedEventArgs Properties | Improve this Doc View Source Status Gets the updated status of the Geolocator object. Declaration PositionStatus Status { get; } Property Value Type Description PositionStatus"
  },
  "api/XPlat.Device.Geolocation.PositionAccuracy.html": {
    "href": "api/XPlat.Device.Geolocation.PositionAccuracy.html",
    "title": "Enum PositionAccuracy | XPlat Windows APIs",
    "keywords": "Enum PositionAccuracy Indicates the requested accuracy level for the location data that the application uses. Namespace : XPlat.Device.Geolocation Assembly : XPlat.Device.Geolocation.dll Syntax public enum PositionAccuracy : int Fields Name Description Default Optimize for power, performance, and other cost considerations. High Deliver the most accurate report possible. This includes using services that might charge money, or consuming higher levels of battery power or connection bandwidth. An accuracy level of High may degrade system performance and should be used only when necessary."
  },
  "api/XPlat.Device.Geolocation.PositionChangedEventArgs.html": {
    "href": "api/XPlat.Device.Geolocation.PositionChangedEventArgs.html",
    "title": "Class PositionChangedEventArgs | XPlat Windows APIs",
    "keywords": "Class PositionChangedEventArgs Provides data for the PositionChanged event. Inheritance System.Object PositionChangedEventArgs Namespace : XPlat.Device.Geolocation Assembly : XPlat.Device.Geolocation.dll Syntax public class PositionChangedEventArgs : object Constructors | Improve this Doc View Source PositionChangedEventArgs(Geoposition) Initializes a new instance of the PositionChangedEventArgs class. Declaration public PositionChangedEventArgs(Geoposition position) Parameters Type Name Description Geoposition position The location data associated with the PositionChanged event. Properties | Improve this Doc View Source Position Gets the location data associated with the PositionChanged event. Declaration public Geoposition Position { get; } Property Value Type Description Geoposition"
  },
  "api/XPlat.Device.Geolocation.PositionStatus.html": {
    "href": "api/XPlat.Device.Geolocation.PositionStatus.html",
    "title": "Enum PositionStatus | XPlat Windows APIs",
    "keywords": "Enum PositionStatus Indicates the ability of the Geolocator object to provide location data. Namespace : XPlat.Device.Geolocation Assembly : XPlat.Device.Geolocation.dll Syntax public enum PositionStatus : int Fields Name Description Disabled Location settings are turned off. This status indicates that the user has not granted the application permission to access location. Initializing Location services is initializing. This is the status if a GPS is the source of location data and the GPS receiver does not yet have the required number of satellites in view to obtain an accurate position. NoData No location data is available from any source. LocationStatus will have this value if the application calls GetGeopositionAsync or registers an event handler for the PositionChanged event, before data is available from a location sensor. Once data is available LocationStatus transitions to the Ready state. NotAvailable Location services is not available. NotInitialized An operation to retrieve location has not yet been initialized. LocationStatus will have this value if the application has not yet called GetGeopositionAsync or registered an event handler for the PositionChanged event. LocationStatus may also have this value if your app doesn't have permission to access location. Call the RequestAccessAsync before accessing the user's location. At that time, your app must be in the foreground and RequestAccessAsync must be called from the UI thread. Until the user grants your app permission to their location, your app can't access location data. Ready Location data is available."
  },
  "api/XPlat.Device.Geolocation.StatusChangedEventArgs.html": {
    "href": "api/XPlat.Device.Geolocation.StatusChangedEventArgs.html",
    "title": "Class StatusChangedEventArgs | XPlat Windows APIs",
    "keywords": "Class StatusChangedEventArgs Provides information for the StatusChanged event. Inheritance System.Object StatusChangedEventArgs Implements IStatusChangedEventArgs Namespace : XPlat.Device.Geolocation Assembly : XPlat.Device.Geolocation.dll Syntax public class StatusChangedEventArgs : object, IStatusChangedEventArgs Constructors | Improve this Doc View Source StatusChangedEventArgs(PositionStatus) Initializes a new instance of the StatusChangedEventArgs class. Declaration public StatusChangedEventArgs(PositionStatus status) Parameters Type Name Description PositionStatus status The position status. Properties | Improve this Doc View Source Status Gets the updated status of the Geolocator object. Declaration public PositionStatus Status { get; } Property Value Type Description PositionStatus Implements IStatusChangedEventArgs"
  },
  "api/XPlat.Device.html": {
    "href": "api/XPlat.Device.html",
    "title": "Namespace XPlat.Device | XPlat Windows APIs",
    "keywords": "Namespace XPlat.Device Interfaces ILauncher Starts the default app associated with the specified file or URI. Enums LaunchQuerySupportStatus Specifies whether an app is available that supports activation."
  },
  "api/XPlat.Device.ILauncher.html": {
    "href": "api/XPlat.Device.ILauncher.html",
    "title": "Interface ILauncher | XPlat Windows APIs",
    "keywords": "Interface ILauncher Starts the default app associated with the specified file or URI. Namespace : XPlat.Device Assembly : XPlat.Device.Launcher.dll Syntax public interface ILauncher Methods | Improve this Doc View Source LaunchFileAsync(IStorageFile) Starts the default app associated with the specified file. Declaration Task<bool> LaunchFileAsync(IStorageFile file) Parameters Type Name Description IStorageFile file The file. Returns Type Description Task < System.Boolean > The launch operation. | Improve this Doc View Source LaunchFolderAsync(IStorageFolder) Launches a file explorer and displays the contents of the specified folder. Declaration Task<bool> LaunchFolderAsync(IStorageFolder folder) Parameters Type Name Description IStorageFolder folder The folder to display in a file explorer. Returns Type Description Task < System.Boolean > The result of the operation. | Improve this Doc View Source LaunchUriAsync(Uri) Starts the default app associated with the URI scheme name for the specified URI. Declaration Task<bool> LaunchUriAsync(Uri uri) Parameters Type Name Description Uri uri The URI. Returns Type Description Task < System.Boolean > Returns true if the default app for the URI scheme was launched; false otherwise. | Improve this Doc View Source QueryUriSupportAsync(Uri) Asynchronously query whether an app can be activated for the specified URI. Declaration Task<LaunchQuerySupportStatus> QueryUriSupportAsync(Uri uri) Parameters Type Name Description Uri uri The URI for which to query support. Returns Type Description Task < LaunchQuerySupportStatus > A value that indicates whether an application is available to launch the URI."
  },
  "api/XPlat.Device.LaunchQuerySupportStatus.html": {
    "href": "api/XPlat.Device.LaunchQuerySupportStatus.html",
    "title": "Enum LaunchQuerySupportStatus | XPlat Windows APIs",
    "keywords": "Enum LaunchQuerySupportStatus Specifies whether an app is available that supports activation. Namespace : XPlat.Device Assembly : XPlat.Device.Launcher.dll Syntax public enum LaunchQuerySupportStatus : int Fields Name Description AppNotInstalled No app is installed to handle the activation. AppUnavailable An app that handles the activation is installed but not available because it is being updated by the store or it was installed on a removable device that is not available. Available An app that handles the activation is available and may be activated. NotSupported The app does not handle the activation. Unknown An unknown error was encountered while determining whether an app supports the activation."
  },
  "api/XPlat.Device.Power.BatteryStatus.html": {
    "href": "api/XPlat.Device.Power.BatteryStatus.html",
    "title": "Enum BatteryStatus | XPlat Windows APIs",
    "keywords": "Enum BatteryStatus Indicates the status of the battery. Namespace : XPlat.Device.Power Assembly : XPlat.Device.Power.dll Syntax public enum BatteryStatus : int Fields Name Description Charging The battery is charging. Discharging The battery is discharging. Idle The battery is idle. NotPresent The battery or battery controller is not present."
  },
  "api/XPlat.Device.Power.BatteryStatusChangedEventArgs.html": {
    "href": "api/XPlat.Device.Power.BatteryStatusChangedEventArgs.html",
    "title": "Class BatteryStatusChangedEventArgs | XPlat Windows APIs",
    "keywords": "Class BatteryStatusChangedEventArgs Inheritance System.Object BatteryStatusChangedEventArgs Namespace : XPlat.Device.Power Assembly : XPlat.Device.Power.dll Syntax public class BatteryStatusChangedEventArgs : EventArgs Constructors | Improve this Doc View Source BatteryStatusChangedEventArgs(BatteryStatus, Int32) Declaration public BatteryStatusChangedEventArgs(BatteryStatus batteryStatus, int remainingChargePercent) Parameters Type Name Description BatteryStatus batteryStatus System.Int32 remainingChargePercent Properties | Improve this Doc View Source BatteryStatus Declaration public BatteryStatus BatteryStatus { get; } Property Value Type Description BatteryStatus | Improve this Doc View Source CheckTime Declaration public DateTime CheckTime { get; } Property Value Type Description DateTime | Improve this Doc View Source RemainingChargePercent Declaration public int RemainingChargePercent { get; } Property Value Type Description System.Int32"
  },
  "api/XPlat.Device.Power.BatteryStatusChangedEventHandler.html": {
    "href": "api/XPlat.Device.Power.BatteryStatusChangedEventHandler.html",
    "title": "Delegate BatteryStatusChangedEventHandler | XPlat Windows APIs",
    "keywords": "Delegate BatteryStatusChangedEventHandler Namespace : XPlat.Device.Power Assembly : XPlat.Device.Power.dll Syntax public delegate void BatteryStatusChangedEventHandler(object sender, BatteryStatusChangedEventArgs args); Parameters Type Name Description System.Object sender BatteryStatusChangedEventArgs args"
  },
  "api/XPlat.Device.Power.Extensions.BatteryStatusExtensions.html": {
    "href": "api/XPlat.Device.Power.Extensions.BatteryStatusExtensions.html",
    "title": "Class BatteryStatusExtensions | XPlat Windows APIs",
    "keywords": "Class BatteryStatusExtensions Inheritance System.Object BatteryStatusExtensions Namespace : XPlat.Device.Power.Extensions Assembly : XPlat.Device.Power.dll Syntax public static class BatteryStatusExtensions : object"
  },
  "api/XPlat.Device.Power.Extensions.html": {
    "href": "api/XPlat.Device.Power.Extensions.html",
    "title": "Namespace XPlat.Device.Power.Extensions | XPlat Windows APIs",
    "keywords": "Namespace XPlat.Device.Power.Extensions Classes BatteryStatusExtensions"
  },
  "api/XPlat.Device.Power.html": {
    "href": "api/XPlat.Device.Power.html",
    "title": "Namespace XPlat.Device.Power | XPlat Windows APIs",
    "keywords": "Namespace XPlat.Device.Power Classes BatteryStatusChangedEventArgs Interfaces IPowerManager Provides access to information about a device's battery and power supply status. Enums BatteryStatus Indicates the status of the battery. Delegates BatteryStatusChangedEventHandler"
  },
  "api/XPlat.Device.Power.IPowerManager.html": {
    "href": "api/XPlat.Device.Power.IPowerManager.html",
    "title": "Interface IPowerManager | XPlat Windows APIs",
    "keywords": "Interface IPowerManager Provides access to information about a device's battery and power supply status. Namespace : XPlat.Device.Power Assembly : XPlat.Device.Power.dll Syntax public interface IPowerManager Properties | Improve this Doc View Source BatteryStatus Gets the device's battery status. Declaration BatteryStatus BatteryStatus { get; } Property Value Type Description BatteryStatus | Improve this Doc View Source RemainingChargePercent Gets the total percentage of charge remaining from all batteries connected to the device. Declaration int RemainingChargePercent { get; } Property Value Type Description System.Int32 Events | Improve this Doc View Source BatteryStatusChanged Occurs when BatteryStatus changes. Declaration event EventHandler<BatteryStatus> BatteryStatusChanged Event Type Type Description EventHandler < BatteryStatus > | Improve this Doc View Source RemainingChargePercentChanged Occurs when RemainingChargePercent changes. Declaration event EventHandler<int> RemainingChargePercentChanged Event Type Type Description EventHandler < System.Int32 >"
  },
  "api/XPlat.Device.Profile.html": {
    "href": "api/XPlat.Device.Profile.html",
    "title": "Namespace XPlat.Device.Profile | XPlat Windows APIs",
    "keywords": "Namespace XPlat.Device.Profile Interfaces IAnalyticsVersionInfo Provides version information about the device family."
  },
  "api/XPlat.Device.Profile.IAnalyticsVersionInfo.html": {
    "href": "api/XPlat.Device.Profile.IAnalyticsVersionInfo.html",
    "title": "Interface IAnalyticsVersionInfo | XPlat Windows APIs",
    "keywords": "Interface IAnalyticsVersionInfo Provides version information about the device family. Namespace : XPlat.Device.Profile Assembly : XPlat.Device.Profile.dll Syntax public interface IAnalyticsVersionInfo Properties | Improve this Doc View Source DeviceFamily Gets a string that represents the type of device the application is running on. Declaration string DeviceFamily { get; } Property Value Type Description System.String | Improve this Doc View Source DeviceFamilyVersion Gets the version within the device family. Declaration string DeviceFamilyVersion { get; } Property Value Type Description System.String"
  },
  "api/XPlat.Exceptions.AppPermissionInvalidException.html": {
    "href": "api/XPlat.Exceptions.AppPermissionInvalidException.html",
    "title": "Class AppPermissionInvalidException | XPlat Windows APIs",
    "keywords": "Class AppPermissionInvalidException Defines an exception that is thrown when an application permission is not set. Inheritance System.Object AppPermissionInvalidException Namespace : XPlat.Exceptions Assembly : XPlat.Core.dll Syntax public class AppPermissionInvalidException : Exception Constructors | Improve this Doc View Source AppPermissionInvalidException(String, String) Initializes a new instance of the AppPermissionInvalidException class. Declaration public AppPermissionInvalidException(string permission, string message) Parameters Type Name Description System.String permission The permission which could not be found. System.String message The message to store. | Improve this Doc View Source AppPermissionInvalidException(String, String, Exception) Initializes a new instance of the AppPermissionInvalidException class. Declaration public AppPermissionInvalidException(string permission, string message, Exception innerException) Parameters Type Name Description System.String permission The permission which could not be found. System.String message The message to store. Exception innerException The inner exception. Properties | Improve this Doc View Source PermissionCode Gets the permission which could not be found. Declaration public string PermissionCode { get; } Property Value Type Description System.String"
  },
  "api/XPlat.Exceptions.html": {
    "href": "api/XPlat.Exceptions.html",
    "title": "Namespace XPlat.Exceptions | XPlat Windows APIs",
    "keywords": "Namespace XPlat.Exceptions Classes AppPermissionInvalidException Defines an exception that is thrown when an application permission is not set."
  },
  "api/XPlat.Extensions.CollectionExtensions.html": {
    "href": "api/XPlat.Extensions.CollectionExtensions.html",
    "title": "Class CollectionExtensions | XPlat Windows APIs",
    "keywords": "Class CollectionExtensions Defines a collection of extensions for enumerable objects. Inheritance System.Object CollectionExtensions Namespace : XPlat.Extensions Assembly : XPlat.Core.dll Syntax public static class CollectionExtensions : object Methods | Improve this Doc View Source GetRange<T>(IReadOnlyList<T>, Int32, Int32) Creates a copy of a range of elements in a . Declaration public static IEnumerable<T> GetRange<T>(this IReadOnlyList<T> list, int index, int count) Parameters Type Name Description IReadOnlyList <T> list The list to get a range from. System.Int32 index The index to start at. System.Int32 count The number of items to get in the range. Returns Type Description IEnumerable <T> The range as a collection of T items. Type Parameters Name Description T The type of item in the list. | Improve this Doc View Source Take<T>(IReadOnlyList<T>, Int32, Int32) Takes a number of elements from the specified collection from the specified starting index. Declaration public static IEnumerable<T> Take<T>(this IReadOnlyList<T> list, int startingIndex, int takeCount) Parameters Type Name Description IReadOnlyList <T> list The to take items from. System.Int32 startingIndex The index to start at in the . System.Int32 takeCount The number of items to take from the starting index of the . Returns Type Description IEnumerable <T> A collection of T items. Type Parameters Name Description T The type of elements in the collection. | Improve this Doc View Source Take<T>(List<T>, Int32, Int32) Takes a number of elements from the specified collection from the specified starting index. Declaration public static IEnumerable<T> Take<T>(this List<T> list, int startingIndex, int takeCount) Parameters Type Name Description List <T> list The to take items from. System.Int32 startingIndex The index to start at in the . System.Int32 takeCount The number of items to take from the starting index of the . Returns Type Description IEnumerable <T> A collection of T items. Type Parameters Name Description T The type of elements in the collection."
  },
  "api/XPlat.Extensions.html": {
    "href": "api/XPlat.Extensions.html",
    "title": "Namespace XPlat.Extensions | XPlat Windows APIs",
    "keywords": "Namespace XPlat.Extensions Classes CollectionExtensions Defines a collection of extensions for enumerable objects."
  },
  "api/XPlat.Foundation.Collections.CollectionChange.html": {
    "href": "api/XPlat.Foundation.Collections.CollectionChange.html",
    "title": "Enum CollectionChange | XPlat Windows APIs",
    "keywords": "Enum CollectionChange Describes the action that causes a change to a collection. Namespace : XPlat.Foundation.Collections Assembly : XPlat.Foundation.dll Syntax public enum CollectionChange : int Fields Name Description ItemChanged An item is changed in the collection. ItemInserted An item is added to the collection. ItemRemoved An item is removed from the collection. Reset The collection is changed."
  },
  "api/XPlat.Foundation.Collections.html": {
    "href": "api/XPlat.Foundation.Collections.html",
    "title": "Namespace XPlat.Foundation.Collections | XPlat Windows APIs",
    "keywords": "Namespace XPlat.Foundation.Collections Classes StringMapChangedEventArgs Interfaces IMapChangedEventArgs<K> Provides data for the changed event of a map collection. IObservableMap<K, V> Notifies listeners of dynamic changes to a map, such as when items are added or removed. IPropertySet Represents a property set, which is a set of PropertyValue objects with string keys. Enums CollectionChange Describes the action that causes a change to a collection. Delegates MapChangedEventHandler<K, V> Represents the method that handles the changed event of an observable map."
  },
  "api/XPlat.Foundation.Collections.IMapChangedEventArgs-1.html": {
    "href": "api/XPlat.Foundation.Collections.IMapChangedEventArgs-1.html",
    "title": "Interface IMapChangedEventArgs<K> | XPlat Windows APIs",
    "keywords": "Interface IMapChangedEventArgs<K> Provides data for the changed event of a map collection. Namespace : XPlat.Foundation.Collections Assembly : XPlat.Foundation.dll Syntax public interface IMapChangedEventArgs<K> Type Parameters Name Description K The type of the keys in the map. Properties | Improve this Doc View Source CollectionChange Gets the type of change that occurred in the map. Declaration CollectionChange CollectionChange { get; } Property Value Type Description CollectionChange | Improve this Doc View Source Key Gets the key of the item that changed. Declaration K Key { get; } Property Value Type Description K"
  },
  "api/XPlat.Foundation.Collections.IObservableMap-2.html": {
    "href": "api/XPlat.Foundation.Collections.IObservableMap-2.html",
    "title": "Interface IObservableMap<K, V> | XPlat Windows APIs",
    "keywords": "Interface IObservableMap<K, V> Notifies listeners of dynamic changes to a map, such as when items are added or removed. Namespace : XPlat.Foundation.Collections Assembly : XPlat.Foundation.dll Syntax public interface IObservableMap<K, V> : IDictionary<K, V> Type Parameters Name Description K The type of the keys in the map. V The type of the values in the map. Events | Improve this Doc View Source MapChanged Occurs when the map changes. Declaration event MapChangedEventHandler<K, V> MapChanged Event Type Type Description MapChangedEventHandler <K, V>"
  },
  "api/XPlat.Foundation.Collections.IPropertySet.html": {
    "href": "api/XPlat.Foundation.Collections.IPropertySet.html",
    "title": "Interface IPropertySet | XPlat Windows APIs",
    "keywords": "Interface IPropertySet Represents a property set, which is a set of PropertyValue objects with string keys. Inherited Members IObservableMap<String, Object>.MapChanged Namespace : XPlat.Foundation.Collections Assembly : XPlat.Foundation.dll Syntax public interface IPropertySet : IObservableMap<string, object>, IDictionary<string, object> Methods | Improve this Doc View Source Get<T>(String) Gets a value from the set for the specified key as the specified type. Declaration T Get<T>(string key) where T : class Parameters Type Name Description System.String key The key to retrieve. Returns Type Description T When complete, the method will return the value for the specified key as the specified type. Type Parameters Name Description T The type of object expected."
  },
  "api/XPlat.Foundation.Collections.MapChangedEventHandler-2.html": {
    "href": "api/XPlat.Foundation.Collections.MapChangedEventHandler-2.html",
    "title": "Delegate MapChangedEventHandler<K, V> | XPlat Windows APIs",
    "keywords": "Delegate MapChangedEventHandler<K, V> Represents the method that handles the changed event of an observable map. Namespace : XPlat.Foundation.Collections Assembly : XPlat.Foundation.dll Syntax public delegate void MapChangedEventHandler<K, V>(IObservableMap<K, V> sender, IMapChangedEventArgs<K> event); Parameters Type Name Description IObservableMap <K, V> sender The observable map that changed. IMapChangedEventArgs <K> event The description of the change that occurred in the map. Type Parameters Name Description K The type of the keys in the map. V The type of the values in the map."
  },
  "api/XPlat.Foundation.Collections.StringMapChangedEventArgs.html": {
    "href": "api/XPlat.Foundation.Collections.StringMapChangedEventArgs.html",
    "title": "Class StringMapChangedEventArgs | XPlat Windows APIs",
    "keywords": "Class StringMapChangedEventArgs Inheritance System.Object StringMapChangedEventArgs Implements IMapChangedEventArgs < System.String > Namespace : XPlat.Foundation.Collections Assembly : XPlat.Foundation.dll Syntax public class StringMapChangedEventArgs : object, IMapChangedEventArgs<string> Constructors | Improve this Doc View Source StringMapChangedEventArgs(String, CollectionChange) Declaration public StringMapChangedEventArgs(string key, CollectionChange collectionChange) Parameters Type Name Description System.String key CollectionChange collectionChange Properties | Improve this Doc View Source CollectionChange Gets the type of change that occurred in the map. Declaration public CollectionChange CollectionChange { get; } Property Value Type Description CollectionChange | Improve this Doc View Source Key Gets the key of the item that changed. Declaration public string Key { get; } Property Value Type Description System.String Implements IMapChangedEventArgs<K>"
  },
  "api/XPlat.Foundation.html": {
    "href": "api/XPlat.Foundation.html",
    "title": "Namespace XPlat.Foundation | XPlat Windows APIs",
    "keywords": "Namespace XPlat.Foundation Structs Size Represents number values that specify a height and width. Delegates TypedEventHandler<TSender, TResult> Represents a method that handles general events."
  },
  "api/XPlat.Foundation.Size.html": {
    "href": "api/XPlat.Foundation.Size.html",
    "title": "Struct Size | XPlat Windows APIs",
    "keywords": "Struct Size Represents number values that specify a height and width. Namespace : XPlat.Foundation Assembly : XPlat.Foundation.dll Syntax public struct Size Constructors | Improve this Doc View Source Size(Double, Double) Declaration public Size(double width, double height) Parameters Type Name Description System.Double width System.Double height Properties | Improve this Doc View Source Empty Declaration public static readonly Size Empty { get; } Property Value Type Description Size | Improve this Doc View Source Height Declaration public double Height { get; set; } Property Value Type Description System.Double | Improve this Doc View Source IsEmpty Declaration public readonly bool IsEmpty { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Width Declaration public double Width { get; set; } Property Value Type Description System.Double Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object o) Parameters Type Name Description System.Object o Returns Type Description System.Boolean | Improve this Doc View Source Equals(Size) Declaration public bool Equals(Size value) Parameters Type Name Description Size value Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Operators | Improve this Doc View Source Equality(Size, Size) Declaration public static bool operator ==(Size size1, Size size2) Parameters Type Name Description Size size1 Size size2 Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Size, Size) Declaration public static bool operator !=(Size size1, Size size2) Parameters Type Name Description Size size1 Size size2 Returns Type Description System.Boolean"
  },
  "api/XPlat.Foundation.TypedEventHandler-2.html": {
    "href": "api/XPlat.Foundation.TypedEventHandler-2.html",
    "title": "Delegate TypedEventHandler<TSender, TResult> | XPlat Windows APIs",
    "keywords": "Delegate TypedEventHandler<TSender, TResult> Represents a method that handles general events. Namespace : XPlat.Foundation Assembly : XPlat.Foundation.dll Syntax public delegate void TypedEventHandler<in TSender, in TResult>(TSender sender, TResult args); Parameters Type Name Description TSender sender The event source. TResult args The event data. If there is no event data, this parameter will be null. Type Parameters Name Description TSender The object type. TResult The type of event data generated by the event."
  },
  "api/XPlat.Helpers.html": {
    "href": "api/XPlat.Helpers.html",
    "title": "Namespace XPlat.Helpers | XPlat Windows APIs",
    "keywords": "Namespace XPlat.Helpers Classes ParseHelper Defines a collection of helper methods for parsing. RequestCodeHelper Represents a helper for generating request codes for applications."
  },
  "api/XPlat.Helpers.ParseHelper.html": {
    "href": "api/XPlat.Helpers.ParseHelper.html",
    "title": "Class ParseHelper | XPlat Windows APIs",
    "keywords": "Class ParseHelper Defines a collection of helper methods for parsing. Inheritance System.Object ParseHelper Namespace : XPlat.Helpers Assembly : XPlat.Core.dll Syntax public static class ParseHelper : object Methods | Improve this Doc View Source SafeParseBool(Object) Safely parses an object to a boolean. Declaration public static bool SafeParseBool(object boolean) Parameters Type Name Description System.Object boolean The boolean object. Returns Type Description System.Boolean Returns object parameter as a boolean. | Improve this Doc View Source SafeParseDateTime(Object) Safely parses an object to a value. Declaration public static DateTime SafeParseDateTime(object dateTime) Parameters Type Name Description System.Object dateTime The date time object. Returns Type Description DateTime Returns object parameter as a DateTime. | Improve this Doc View Source SafeParseDateTimeOffset(Object) Safely parses an object to a value. Declaration public static DateTimeOffset SafeParseDateTimeOffset(object dateTimeOffset) Parameters Type Name Description System.Object dateTimeOffset The date time offset object. Returns Type Description DateTimeOffset Returns object parameter as a DateTimeOffset. | Improve this Doc View Source SafeParseDecimal(Object) Safely parses an object to a decimal. Declaration public static decimal SafeParseDecimal(object dcml) Parameters Type Name Description System.Object dcml The decimal object. Returns Type Description System.Decimal Returns object parameter as a decimal. | Improve this Doc View Source SafeParseDouble(Object) Safely parses an object to a double. Declaration public static double SafeParseDouble(object dbl) Parameters Type Name Description System.Object dbl The double object. Returns Type Description System.Double Returns object parameter as a double. | Improve this Doc View Source SafeParseEnum<TEnum>(Object) Safely parses an object to an enum value. Declaration public static TEnum SafeParseEnum<TEnum>(object enumValue) where TEnum : struct Parameters Type Name Description System.Object enumValue The enum object. Returns Type Description TEnum Returns object parameter as an enum value. Type Parameters Name Description TEnum The type of Enum. | Improve this Doc View Source SafeParseFloat(Object) Safely parses an object to a float. Declaration public static float SafeParseFloat(object flt) Parameters Type Name Description System.Object flt The float object. Returns Type Description System.Single The . | Improve this Doc View Source SafeParseGuid(Object) Safely parse an object to a Guid object. Declaration public static Guid SafeParseGuid(object guid) Parameters Type Name Description System.Object guid The guid. Returns Type Description Guid The . | Improve this Doc View Source SafeParseInt(Object) Safely parses an object to an integer. Declaration public static int SafeParseInt(object integer) Parameters Type Name Description System.Object integer The integer object. Returns Type Description System.Int32 Returns object parameter as an integer. | Improve this Doc View Source SafeParseInt64(Object) Safely parse an object to an Int64 object. Declaration public static long SafeParseInt64(object integer) Parameters Type Name Description System.Object integer The integer. Returns Type Description System.Int64 The . | Improve this Doc View Source SafeParseString(Object) Safely parses an object to a string. Declaration public static string SafeParseString(object str) Parameters Type Name Description System.Object str The string object. Returns Type Description System.String Returns object parameter as a string. | Improve this Doc View Source SafeParseUInt(Object) Safely parses an object to an unsigned integer. Declaration public static uint SafeParseUInt(object integer) Parameters Type Name Description System.Object integer The unsigned integer object. Returns Type Description System.UInt32 Returns object parameter as an unsigned integer."
  },
  "api/XPlat.Helpers.RequestCodeHelper.html": {
    "href": "api/XPlat.Helpers.RequestCodeHelper.html",
    "title": "Class RequestCodeHelper | XPlat Windows APIs",
    "keywords": "Class RequestCodeHelper Represents a helper for generating request codes for applications. Inheritance System.Object RequestCodeHelper Namespace : XPlat.Helpers Assembly : XPlat.Core.dll Syntax public static class RequestCodeHelper : object Properties | Improve this Doc View Source LastRequestCode Gets the previously generated request code. Declaration public static int LastRequestCode { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source GenerateRequestCode() Generates an integer request code. Declaration public static int GenerateRequestCode() Returns Type Description System.Int32 Returns a value ranging from 1 to 65535 (ushort.MaxValue). | Improve this Doc View Source Reset() Resets the request code. Declaration public static void Reset()"
  },
  "api/XPlat.Media.Capture.CameraCaptureUIMaxPhotoResolution.html": {
    "href": "api/XPlat.Media.Capture.CameraCaptureUIMaxPhotoResolution.html",
    "title": "Enum CameraCaptureUIMaxPhotoResolution | XPlat Windows APIs",
    "keywords": "Enum CameraCaptureUIMaxPhotoResolution Determines the highest resolution the user can select for capturing photos. Namespace : XPlat.Media.Capture Assembly : XPlat.Media.Capture.dll Syntax public enum CameraCaptureUIMaxPhotoResolution : int Fields Name Description HighestAvailable The user can select any resolution. Large3M The user can select resolutions up to 1920 X 1080, or a similar 4:3 resolution. MediumXga The user can select resolutions up to 1024 X 768, or a similar 16:9 resolution. SmallVga The user can select resolutions up to 320 X 240, or a similar 16:9 resolution. VeryLarge5M The user can select resolutions up to 5MP. VerySmallQvga The user can select resolutions up to 320 X 240, or a similar 16:9 resolution."
  },
  "api/XPlat.Media.Capture.CameraCaptureUIMaxVideoResolution.html": {
    "href": "api/XPlat.Media.Capture.CameraCaptureUIMaxVideoResolution.html",
    "title": "Enum CameraCaptureUIMaxVideoResolution | XPlat Windows APIs",
    "keywords": "Enum CameraCaptureUIMaxVideoResolution Determines the highest resolution the user can select for capturing video. Namespace : XPlat.Media.Capture Assembly : XPlat.Media.Capture.dll Syntax public enum CameraCaptureUIMaxVideoResolution : int Fields Name Description HighDefinition The user can select resolutions up to high definition resolutions. HighestAvailable The user can select any resolution. LowDefinition The user can select resolutions up to low definition resolutions. StandardDefinition The user can select resolutions up to standard definition resolutions."
  },
  "api/XPlat.Media.Capture.CameraCaptureUIMode.html": {
    "href": "api/XPlat.Media.Capture.CameraCaptureUIMode.html",
    "title": "Enum CameraCaptureUIMode | XPlat Windows APIs",
    "keywords": "Enum CameraCaptureUIMode Determines whether the user interface for capturing from the attached camera allows capture of photos, videos, or both photos and videos. Namespace : XPlat.Media.Capture Assembly : XPlat.Media.Capture.dll Syntax public enum CameraCaptureUIMode : int Fields Name Description Photo The user can only capture a photo. PhotoOrVideo Either a photo or video can be captured. Video The user can only capture a video."
  },
  "api/XPlat.Media.Capture.CameraCaptureUIPhotoCaptureSettings.html": {
    "href": "api/XPlat.Media.Capture.CameraCaptureUIPhotoCaptureSettings.html",
    "title": "Class CameraCaptureUIPhotoCaptureSettings | XPlat Windows APIs",
    "keywords": "Class CameraCaptureUIPhotoCaptureSettings Provides settings for capturing photos. Inheritance System.Object CameraCaptureUIPhotoCaptureSettings Implements ICameraCaptureUIPhotoCaptureSettings Namespace : XPlat.Media.Capture Assembly : XPlat.Media.Capture.dll Syntax public class CameraCaptureUIPhotoCaptureSettings : object, ICameraCaptureUIPhotoCaptureSettings Constructors | Improve this Doc View Source CameraCaptureUIPhotoCaptureSettings() Initializes a new instance of the CameraCaptureUIPhotoCaptureSettings class. Declaration public CameraCaptureUIPhotoCaptureSettings() Properties | Improve this Doc View Source AllowCropping Determines whether photo cropping will be enabled in the user interface for capture a photo. Declaration public bool AllowCropping { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxResolution Determines the maximum resolution the user will be able to select. Declaration public CameraCaptureUIMaxPhotoResolution MaxResolution { get; set; } Property Value Type Description CameraCaptureUIMaxPhotoResolution Implements ICameraCaptureUIPhotoCaptureSettings"
  },
  "api/XPlat.Media.Capture.CameraCaptureUIVideoCaptureSettings.html": {
    "href": "api/XPlat.Media.Capture.CameraCaptureUIVideoCaptureSettings.html",
    "title": "Class CameraCaptureUIVideoCaptureSettings | XPlat Windows APIs",
    "keywords": "Class CameraCaptureUIVideoCaptureSettings Provides settings for capturing videos. The settings include maximum resolution, maximum duration, and whether or not to allow trimming. Inheritance System.Object CameraCaptureUIVideoCaptureSettings Implements ICameraCaptureUIVideoCaptureSettings Namespace : XPlat.Media.Capture Assembly : XPlat.Media.Capture.dll Syntax public class CameraCaptureUIVideoCaptureSettings : object, ICameraCaptureUIVideoCaptureSettings Constructors | Improve this Doc View Source CameraCaptureUIVideoCaptureSettings() Initializes a new instance of the CameraCaptureUIVideoCaptureSettings class. Declaration public CameraCaptureUIVideoCaptureSettings() Properties | Improve this Doc View Source AllowTrimming Determines whether or not the video trimming user interface will be enabled. Declaration public bool AllowTrimming { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxDurationInSeconds Determines the maximum duration of a video. Declaration public float MaxDurationInSeconds { get; set; } Property Value Type Description System.Single | Improve this Doc View Source MaxResolution Determines the maximum resolution that the user can select. Declaration public CameraCaptureUIMaxVideoResolution MaxResolution { get; set; } Property Value Type Description CameraCaptureUIMaxVideoResolution Implements ICameraCaptureUIVideoCaptureSettings"
  },
  "api/XPlat.Media.Capture.Extensions.BitmapExtensions.html": {
    "href": "api/XPlat.Media.Capture.Extensions.BitmapExtensions.html",
    "title": "Class BitmapExtensions | XPlat Windows APIs",
    "keywords": "Class BitmapExtensions Defines a collection of extensions for bitmap objects. Inheritance System.Object BitmapExtensions Namespace : XPlat.Media.Capture.Extensions Assembly : XPlat.Media.Capture.dll Syntax public static class BitmapExtensions : object"
  },
  "api/XPlat.Media.Capture.Extensions.CameraCaptureUIMaxPhotoResolutionExtensions.html": {
    "href": "api/XPlat.Media.Capture.Extensions.CameraCaptureUIMaxPhotoResolutionExtensions.html",
    "title": "Class CameraCaptureUIMaxPhotoResolutionExtensions | XPlat Windows APIs",
    "keywords": "Class CameraCaptureUIMaxPhotoResolutionExtensions Inheritance System.Object CameraCaptureUIMaxPhotoResolutionExtensions Namespace : XPlat.Media.Capture.Extensions Assembly : XPlat.Media.Capture.dll Syntax public static class CameraCaptureUIMaxPhotoResolutionExtensions : object"
  },
  "api/XPlat.Media.Capture.Extensions.CameraCaptureUIMaxVideoResolutionExtensions.html": {
    "href": "api/XPlat.Media.Capture.Extensions.CameraCaptureUIMaxVideoResolutionExtensions.html",
    "title": "Class CameraCaptureUIMaxVideoResolutionExtensions | XPlat Windows APIs",
    "keywords": "Class CameraCaptureUIMaxVideoResolutionExtensions Inheritance System.Object CameraCaptureUIMaxVideoResolutionExtensions Namespace : XPlat.Media.Capture.Extensions Assembly : XPlat.Media.Capture.dll Syntax public static class CameraCaptureUIMaxVideoResolutionExtensions : object"
  },
  "api/XPlat.Media.Capture.Extensions.html": {
    "href": "api/XPlat.Media.Capture.Extensions.html",
    "title": "Namespace XPlat.Media.Capture.Extensions | XPlat Windows APIs",
    "keywords": "Namespace XPlat.Media.Capture.Extensions Classes BitmapExtensions Defines a collection of extensions for bitmap objects. CameraCaptureUIMaxPhotoResolutionExtensions CameraCaptureUIMaxVideoResolutionExtensions StorageFileExtensions"
  },
  "api/XPlat.Media.Capture.Extensions.StorageFileExtensions.html": {
    "href": "api/XPlat.Media.Capture.Extensions.StorageFileExtensions.html",
    "title": "Class StorageFileExtensions | XPlat Windows APIs",
    "keywords": "Class StorageFileExtensions Inheritance System.Object StorageFileExtensions Namespace : XPlat.Media.Capture.Extensions Assembly : XPlat.Media.Capture.dll Syntax public static class StorageFileExtensions : object"
  },
  "api/XPlat.Media.Capture.html": {
    "href": "api/XPlat.Media.Capture.html",
    "title": "Namespace XPlat.Media.Capture | XPlat Windows APIs",
    "keywords": "Namespace XPlat.Media.Capture Classes CameraCaptureUIPhotoCaptureSettings Provides settings for capturing photos. CameraCaptureUIVideoCaptureSettings Provides settings for capturing videos. The settings include maximum resolution, maximum duration, and whether or not to allow trimming. Interfaces ICameraCaptureUI Provides a full window UI for capturing video and photos from a camera. ICameraCaptureUIPhotoCaptureSettings Provides settings for capturing photos. ICameraCaptureUIVideoCaptureSettings Provides settings for capturing videos. The settings include maximum resolution, maximum duration, and whether or not to allow trimming. Enums CameraCaptureUIMaxPhotoResolution Determines the highest resolution the user can select for capturing photos. CameraCaptureUIMaxVideoResolution Determines the highest resolution the user can select for capturing video. CameraCaptureUIMode Determines whether the user interface for capturing from the attached camera allows capture of photos, videos, or both photos and videos."
  },
  "api/XPlat.Media.Capture.ICameraCaptureUI.html": {
    "href": "api/XPlat.Media.Capture.ICameraCaptureUI.html",
    "title": "Interface ICameraCaptureUI | XPlat Windows APIs",
    "keywords": "Interface ICameraCaptureUI Provides a full window UI for capturing video and photos from a camera. Namespace : XPlat.Media.Capture Assembly : XPlat.Media.Capture.dll Syntax public interface ICameraCaptureUI Properties | Improve this Doc View Source PhotoSettings Provides settings for capturing photos. Declaration CameraCaptureUIPhotoCaptureSettings PhotoSettings { get; } Property Value Type Description CameraCaptureUIPhotoCaptureSettings | Improve this Doc View Source VideoSettings Provides settings for capturing videos. The settings include maximum resolution, maximum duration, and whether or not to allow trimming. Declaration CameraCaptureUIVideoCaptureSettings VideoSettings { get; } Property Value Type Description CameraCaptureUIVideoCaptureSettings Methods | Improve this Doc View Source CaptureFileAsync(CameraCaptureUIMode) Launches the CameraCaptureUI user interface. Declaration Task<IStorageFile> CaptureFileAsync(CameraCaptureUIMode mode) Parameters Type Name Description CameraCaptureUIMode mode Specifies whether the user interface that will be shown allows the user to capture a photo, capture a video, or capture both photos and videos. Returns Type Description Task < IStorageFile > When this operation completes, an IStorageFile object is returned."
  },
  "api/XPlat.Media.Capture.ICameraCaptureUIPhotoCaptureSettings.html": {
    "href": "api/XPlat.Media.Capture.ICameraCaptureUIPhotoCaptureSettings.html",
    "title": "Interface ICameraCaptureUIPhotoCaptureSettings | XPlat Windows APIs",
    "keywords": "Interface ICameraCaptureUIPhotoCaptureSettings Provides settings for capturing photos. Namespace : XPlat.Media.Capture Assembly : XPlat.Media.Capture.dll Syntax public interface ICameraCaptureUIPhotoCaptureSettings Properties | Improve this Doc View Source AllowCropping Determines whether photo cropping will be enabled in the user interface for capture a photo. Declaration bool AllowCropping { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxResolution Determines the maximum resolution the user will be able to select. Declaration CameraCaptureUIMaxPhotoResolution MaxResolution { get; set; } Property Value Type Description CameraCaptureUIMaxPhotoResolution"
  },
  "api/XPlat.Media.Capture.ICameraCaptureUIVideoCaptureSettings.html": {
    "href": "api/XPlat.Media.Capture.ICameraCaptureUIVideoCaptureSettings.html",
    "title": "Interface ICameraCaptureUIVideoCaptureSettings | XPlat Windows APIs",
    "keywords": "Interface ICameraCaptureUIVideoCaptureSettings Provides settings for capturing videos. The settings include maximum resolution, maximum duration, and whether or not to allow trimming. Namespace : XPlat.Media.Capture Assembly : XPlat.Media.Capture.dll Syntax public interface ICameraCaptureUIVideoCaptureSettings Properties | Improve this Doc View Source AllowTrimming Determines whether or not the video trimming user interface will be enabled. Declaration bool AllowTrimming { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxDurationInSeconds Determines the maximum duration of a video. Declaration float MaxDurationInSeconds { get; set; } Property Value Type Description System.Single | Improve this Doc View Source MaxResolution Determines the maximum resolution that the user can select. Declaration CameraCaptureUIMaxVideoResolution MaxResolution { get; set; } Property Value Type Description CameraCaptureUIMaxVideoResolution"
  },
  "api/XPlat.Services.Maps.Extensions.html": {
    "href": "api/XPlat.Services.Maps.Extensions.html",
    "title": "Namespace XPlat.Services.Maps.Extensions | XPlat Windows APIs",
    "keywords": "Namespace XPlat.Services.Maps.Extensions Classes MapLocationDesiredAccuracyExtensions Defines a collection of extensions for the MapLocationDesiredAccuracy enum. MapLocationFinderStatusExtensions Defines a collection of extensions for the MapLocationFinderStatus enum."
  },
  "api/XPlat.Services.Maps.Extensions.MapLocationDesiredAccuracyExtensions.html": {
    "href": "api/XPlat.Services.Maps.Extensions.MapLocationDesiredAccuracyExtensions.html",
    "title": "Class MapLocationDesiredAccuracyExtensions | XPlat Windows APIs",
    "keywords": "Class MapLocationDesiredAccuracyExtensions Defines a collection of extensions for the MapLocationDesiredAccuracy enum. Inheritance System.Object MapLocationDesiredAccuracyExtensions Namespace : XPlat.Services.Maps.Extensions Assembly : XPlat.Services.Maps.dll Syntax public static class MapLocationDesiredAccuracyExtensions : object"
  },
  "api/XPlat.Services.Maps.Extensions.MapLocationFinderStatusExtensions.html": {
    "href": "api/XPlat.Services.Maps.Extensions.MapLocationFinderStatusExtensions.html",
    "title": "Class MapLocationFinderStatusExtensions | XPlat Windows APIs",
    "keywords": "Class MapLocationFinderStatusExtensions Defines a collection of extensions for the MapLocationFinderStatus enum. Inheritance System.Object MapLocationFinderStatusExtensions Namespace : XPlat.Services.Maps.Extensions Assembly : XPlat.Services.Maps.dll Syntax public static class MapLocationFinderStatusExtensions : object"
  },
  "api/XPlat.Services.Maps.html": {
    "href": "api/XPlat.Services.Maps.html",
    "title": "Namespace XPlat.Services.Maps | XPlat Windows APIs",
    "keywords": "Namespace XPlat.Services.Maps Classes MapAddress Represents an address. MapLocation Represents a geographic location. MapLocationFinderResult Returns the result of a MapLocationFinder query. Interfaces IMapAddress Represents an address. IMapLocation Represents a geographic location. IMapLocationFinderResult Returns the result of a MapLocationFinder query. Enums MapLocationDesiredAccuracy Indicates the desired accuracy to use when converting latitude and longitude coordinates to a physical location like a city or address. MapLocationFinderStatus Returns the status of a MapLocationFinder query. This enumeration provides values for the Status property of a MapLocationFinderResult."
  },
  "api/XPlat.Services.Maps.IMapAddress.html": {
    "href": "api/XPlat.Services.Maps.IMapAddress.html",
    "title": "Interface IMapAddress | XPlat Windows APIs",
    "keywords": "Interface IMapAddress Represents an address. Namespace : XPlat.Services.Maps Assembly : XPlat.Services.Maps.dll Syntax public interface IMapAddress Properties | Improve this Doc View Source BuildingFloor Gets the building floor of an address. Declaration string BuildingFloor { get; } Property Value Type Description System.String | Improve this Doc View Source BuildingName Gets the building name of an address. Declaration string BuildingName { get; } Property Value Type Description System.String | Improve this Doc View Source BuildingRoom Gets the building room of an address. Declaration string BuildingRoom { get; } Property Value Type Description System.String | Improve this Doc View Source BuildingWing Gets the building wing of an address. Declaration string BuildingWing { get; } Property Value Type Description System.String | Improve this Doc View Source Continent Gets the continent of an address. Declaration string Continent { get; } Property Value Type Description System.String | Improve this Doc View Source Country Gets the country of an address. Declaration string Country { get; } Property Value Type Description System.String | Improve this Doc View Source CountryCode Gets the country code of an address. Declaration string CountryCode { get; } Property Value Type Description System.String | Improve this Doc View Source District Gets the district of an address. Declaration string District { get; } Property Value Type Description System.String | Improve this Doc View Source Neighborhood Gets the neighborhood of an address. Declaration string Neighborhood { get; } Property Value Type Description System.String | Improve this Doc View Source PostCode Gets the postal code of an address. Declaration string PostCode { get; } Property Value Type Description System.String | Improve this Doc View Source Region Gets the region (for example, the state or province) of an address. Declaration string Region { get; } Property Value Type Description System.String | Improve this Doc View Source RegionCode Gets the code for the region (for example, the state or province) of an address. Declaration string RegionCode { get; } Property Value Type Description System.String | Improve this Doc View Source Street Gets the street of an address. Declaration string Street { get; } Property Value Type Description System.String | Improve this Doc View Source StreetNumber Gets the street number of an address. Declaration string StreetNumber { get; } Property Value Type Description System.String | Improve this Doc View Source Town Gets the town or city of an address. Declaration string Town { get; } Property Value Type Description System.String"
  },
  "api/XPlat.Services.Maps.IMapLocation.html": {
    "href": "api/XPlat.Services.Maps.IMapLocation.html",
    "title": "Interface IMapLocation | XPlat Windows APIs",
    "keywords": "Interface IMapLocation Represents a geographic location. Namespace : XPlat.Services.Maps Assembly : XPlat.Services.Maps.dll Syntax public interface IMapLocation Properties | Improve this Doc View Source Address Gets the address of a geographic location. Declaration MapAddress Address { get; } Property Value Type Description MapAddress | Improve this Doc View Source Description Gets the description of a geographic location. Declaration string Description { get; } Property Value Type Description System.String | Improve this Doc View Source DisplayName Gets the display name of a geographic location. Declaration string DisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source Point Gets the coordinates of a geographic location. Declaration Geopoint Point { get; } Property Value Type Description Geopoint"
  },
  "api/XPlat.Services.Maps.IMapLocationFinderResult.html": {
    "href": "api/XPlat.Services.Maps.IMapLocationFinderResult.html",
    "title": "Interface IMapLocationFinderResult | XPlat Windows APIs",
    "keywords": "Interface IMapLocationFinderResult Returns the result of a MapLocationFinder query. Namespace : XPlat.Services.Maps Assembly : XPlat.Services.Maps.dll Syntax public interface IMapLocationFinderResult Properties | Improve this Doc View Source Locations Gets the list of locations found by a MapLocationFinder query. Declaration IReadOnlyList<MapLocation> Locations { get; } Property Value Type Description IReadOnlyList < MapLocation > | Improve this Doc View Source Status Gets the status of a MapLocationFinder query. Declaration MapLocationFinderStatus Status { get; } Property Value Type Description MapLocationFinderStatus"
  },
  "api/XPlat.Services.Maps.MapAddress.html": {
    "href": "api/XPlat.Services.Maps.MapAddress.html",
    "title": "Class MapAddress | XPlat Windows APIs",
    "keywords": "Class MapAddress Represents an address. Inheritance System.Object MapAddress Implements IMapAddress Namespace : XPlat.Services.Maps Assembly : XPlat.Services.Maps.dll Syntax public class MapAddress : object, IMapAddress Constructors | Improve this Doc View Source MapAddress() Initializes a new instance of the MapAddress class. Declaration public MapAddress() Properties | Improve this Doc View Source BuildingFloor Gets the building floor of an address. Declaration public string BuildingFloor { get; } Property Value Type Description System.String | Improve this Doc View Source BuildingName Gets the building name of an address. Declaration public string BuildingName { get; } Property Value Type Description System.String | Improve this Doc View Source BuildingRoom Gets the building room of an address. Declaration public string BuildingRoom { get; } Property Value Type Description System.String | Improve this Doc View Source BuildingWing Gets the building wing of an address. Declaration public string BuildingWing { get; } Property Value Type Description System.String | Improve this Doc View Source Continent Gets the continent of an address. Declaration public string Continent { get; } Property Value Type Description System.String | Improve this Doc View Source Country Gets the country of an address. Declaration public string Country { get; } Property Value Type Description System.String | Improve this Doc View Source CountryCode Gets the country code of an address. Declaration public string CountryCode { get; } Property Value Type Description System.String | Improve this Doc View Source District Gets the district of an address. Declaration public string District { get; } Property Value Type Description System.String | Improve this Doc View Source Neighborhood Gets the neighborhood of an address. Declaration public string Neighborhood { get; } Property Value Type Description System.String | Improve this Doc View Source PostCode Gets the postal code of an address. Declaration public string PostCode { get; } Property Value Type Description System.String | Improve this Doc View Source Region Gets the region (for example, the state or province) of an address. Declaration public string Region { get; } Property Value Type Description System.String | Improve this Doc View Source RegionCode Gets the code for the region (for example, the state or province) of an address. Declaration public string RegionCode { get; } Property Value Type Description System.String | Improve this Doc View Source Street Gets the street of an address. Declaration public string Street { get; } Property Value Type Description System.String | Improve this Doc View Source StreetNumber Gets the street number of an address. Declaration public string StreetNumber { get; } Property Value Type Description System.String | Improve this Doc View Source Town Gets the town or city of an address. Declaration public string Town { get; } Property Value Type Description System.String Methods | Improve this Doc View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description System.String A string that represents the current object. Implements IMapAddress"
  },
  "api/XPlat.Services.Maps.MapLocation.html": {
    "href": "api/XPlat.Services.Maps.MapLocation.html",
    "title": "Class MapLocation | XPlat Windows APIs",
    "keywords": "Class MapLocation Represents a geographic location. Inheritance System.Object MapLocation Implements IMapLocation Namespace : XPlat.Services.Maps Assembly : XPlat.Services.Maps.dll Syntax public class MapLocation : object, IMapLocation Properties | Improve this Doc View Source Address Gets the address of a geographic location. Declaration public MapAddress Address { get; } Property Value Type Description MapAddress | Improve this Doc View Source Description Gets the description of a geographic location. Declaration public string Description { get; } Property Value Type Description System.String | Improve this Doc View Source DisplayName Gets the display name of a geographic location. Declaration public string DisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source Point Gets the coordinates of a geographic location. Declaration public Geopoint Point { get; } Property Value Type Description Geopoint Implements IMapLocation"
  },
  "api/XPlat.Services.Maps.MapLocationDesiredAccuracy.html": {
    "href": "api/XPlat.Services.Maps.MapLocationDesiredAccuracy.html",
    "title": "Enum MapLocationDesiredAccuracy | XPlat Windows APIs",
    "keywords": "Enum MapLocationDesiredAccuracy Indicates the desired accuracy to use when converting latitude and longitude coordinates to a physical location like a city or address. Namespace : XPlat.Services.Maps Assembly : XPlat.Services.Maps.dll Syntax public enum MapLocationDesiredAccuracy : int Fields Name Description High Leverage the underlying REST API call to get richer and more accurate results. Low Leverage the maps disk cache to get accurate info up to the city level."
  },
  "api/XPlat.Services.Maps.MapLocationFinderResult.html": {
    "href": "api/XPlat.Services.Maps.MapLocationFinderResult.html",
    "title": "Class MapLocationFinderResult | XPlat Windows APIs",
    "keywords": "Class MapLocationFinderResult Returns the result of a MapLocationFinder query. Inheritance System.Object MapLocationFinderResult Implements IMapLocationFinderResult Namespace : XPlat.Services.Maps Assembly : XPlat.Services.Maps.dll Syntax public class MapLocationFinderResult : object, IMapLocationFinderResult Constructors | Improve this Doc View Source MapLocationFinderResult() Initializes a new instance of the MapLocationFinderResult class. Declaration public MapLocationFinderResult() Properties | Improve this Doc View Source Locations Gets the list of locations found by a MapLocationFinder query. Declaration public IReadOnlyList<MapLocation> Locations { get; } Property Value Type Description IReadOnlyList < MapLocation > | Improve this Doc View Source Status Gets the status of a MapLocationFinder query. Declaration public MapLocationFinderStatus Status { get; } Property Value Type Description MapLocationFinderStatus Implements IMapLocationFinderResult"
  },
  "api/XPlat.Services.Maps.MapLocationFinderStatus.html": {
    "href": "api/XPlat.Services.Maps.MapLocationFinderStatus.html",
    "title": "Enum MapLocationFinderStatus | XPlat Windows APIs",
    "keywords": "Enum MapLocationFinderStatus Returns the status of a MapLocationFinder query. This enumeration provides values for the Status property of a MapLocationFinderResult. Namespace : XPlat.Services.Maps Assembly : XPlat.Services.Maps.dll Syntax public enum MapLocationFinderStatus : int Fields Name Description BadLocation The specified point cannot be converted to a location. For example, the point is in an ocean or a desert. IndexFailure The query encountered an internal error. InvalidCredentials The query provided credentials that are not valid. NetworkFailure The query encountered a network failure. NotSupported The query is not supported. Success Query search operation was successful. Check result size before accessing results. UnknownError The query returned an unknown error."
  },
  "api/XPlat.Storage.ApplicationDataCreateDisposition.html": {
    "href": "api/XPlat.Storage.ApplicationDataCreateDisposition.html",
    "title": "Enum ApplicationDataCreateDisposition | XPlat Windows APIs",
    "keywords": "Enum ApplicationDataCreateDisposition Specifies options for creating application data containers or returning existing containers. This enumeration is used by the ApplicationDataContainer.CreateContainer method. Namespace : XPlat.Storage Assembly : XPlat.Storage.dll Syntax public enum ApplicationDataCreateDisposition : int Fields Name Description Always Always returns the specified container. Creates the container if it does not exist. Existing Returns the specified container only if it already exists. Raises an exception of type System.Exception if the specified container does not exist."
  },
  "api/XPlat.Storage.ApplicationDataLocality.html": {
    "href": "api/XPlat.Storage.ApplicationDataLocality.html",
    "title": "Enum ApplicationDataLocality | XPlat Windows APIs",
    "keywords": "Enum ApplicationDataLocality Specifies the type of an application data store. Namespace : XPlat.Storage Assembly : XPlat.Storage.dll Syntax public enum ApplicationDataLocality : int Fields Name Description Local The data resides in the local application data store. LocalCache The data resides in the local cache for the application data store. Roaming The data resides in the roaming application data store. Shared Temporary The data resides in the temporary application data store."
  },
  "api/XPlat.Storage.CreationCollisionOption.html": {
    "href": "api/XPlat.Storage.CreationCollisionOption.html",
    "title": "Enum CreationCollisionOption | XPlat Windows APIs",
    "keywords": "Enum CreationCollisionOption Specifies what to do if a file or folder with the specified name already exists in the current folder when you create a new file or folder. Namespace : XPlat.Storage Assembly : XPlat.Storage.dll Syntax public enum CreationCollisionOption : int Fields Name Description FailIfExists Raise an exception of type System.Exception if the file or folder already exists. Methods that don't explicitly pass a value from the CreationCollisionOption enumeration use the FailIfExists value as the default when you try to create, rename, copy, or move a file or folder. GenerateUniqueName Automatically append a number to the base of the specified name if the file or folder already exists.For example, if MyFile.txt already exists, then the new file is named MyFile (2).txt. If MyFolder already exists, then the new folder is named MyFolder (2). OpenIfExists Return the existing item if the file or folder already exists. ReplaceExisting Replace the existing item if the file or folder already exists."
  },
  "api/XPlat.Storage.Extensions.ApplicationDataCreateDispositionExtensions.html": {
    "href": "api/XPlat.Storage.Extensions.ApplicationDataCreateDispositionExtensions.html",
    "title": "Class ApplicationDataCreateDispositionExtensions | XPlat Windows APIs",
    "keywords": "Class ApplicationDataCreateDispositionExtensions Inheritance System.Object ApplicationDataCreateDispositionExtensions Namespace : XPlat.Storage.Extensions Assembly : XPlat.Storage.dll Syntax public static class ApplicationDataCreateDispositionExtensions : object"
  },
  "api/XPlat.Storage.Extensions.ApplicationDataLocalityExtensions.html": {
    "href": "api/XPlat.Storage.Extensions.ApplicationDataLocalityExtensions.html",
    "title": "Class ApplicationDataLocalityExtensions | XPlat Windows APIs",
    "keywords": "Class ApplicationDataLocalityExtensions Inheritance System.Object ApplicationDataLocalityExtensions Namespace : XPlat.Storage.Extensions Assembly : XPlat.Storage.dll Syntax public static class ApplicationDataLocalityExtensions : object"
  },
  "api/XPlat.Storage.Extensions.CreationCollisionOptionExtensions.html": {
    "href": "api/XPlat.Storage.Extensions.CreationCollisionOptionExtensions.html",
    "title": "Class CreationCollisionOptionExtensions | XPlat Windows APIs",
    "keywords": "Class CreationCollisionOptionExtensions Inheritance System.Object CreationCollisionOptionExtensions Namespace : XPlat.Storage.Extensions Assembly : XPlat.Storage.dll Syntax public static class CreationCollisionOptionExtensions : object"
  },
  "api/XPlat.Storage.Extensions.FileAccessModeExtensions.html": {
    "href": "api/XPlat.Storage.Extensions.FileAccessModeExtensions.html",
    "title": "Class FileAccessModeExtensions | XPlat Windows APIs",
    "keywords": "Class FileAccessModeExtensions Inheritance System.Object FileAccessModeExtensions Namespace : XPlat.Storage.Extensions Assembly : XPlat.Storage.dll Syntax public static class FileAccessModeExtensions : object"
  },
  "api/XPlat.Storage.Extensions.FileAttributesExtensions.html": {
    "href": "api/XPlat.Storage.Extensions.FileAttributesExtensions.html",
    "title": "Class FileAttributesExtensions | XPlat Windows APIs",
    "keywords": "Class FileAttributesExtensions Inheritance System.Object FileAttributesExtensions Namespace : XPlat.Storage.Extensions Assembly : XPlat.Storage.dll Syntax public static class FileAttributesExtensions : object Methods | Improve this Doc View Source ToInternalFileAttributes(System.IO.FileAttributes) Declaration public static FileAttributes ToInternalFileAttributes(this System.IO.FileAttributes attributes) Parameters Type Name Description System.IO.FileAttributes attributes Returns Type Description FileAttributes | Improve this Doc View Source ToSystemFileAttributes(FileAttributes) Declaration public static System.IO.FileAttributes ToSystemFileAttributes(this FileAttributes attributes) Parameters Type Name Description FileAttributes attributes Returns Type Description System.IO.FileAttributes"
  },
  "api/XPlat.Storage.Extensions.html": {
    "href": "api/XPlat.Storage.Extensions.html",
    "title": "Namespace XPlat.Storage.Extensions | XPlat Windows APIs",
    "keywords": "Namespace XPlat.Storage.Extensions Classes ApplicationDataCreateDispositionExtensions ApplicationDataLocalityExtensions CreationCollisionOptionExtensions FileAccessModeExtensions FileAttributesExtensions NameCollisionOptionExtensions StorageFileExtensions StorageItemContentPropertiesExtensions Defines a collection of common extensions for the Storage namespace."
  },
  "api/XPlat.Storage.Extensions.NameCollisionOptionExtensions.html": {
    "href": "api/XPlat.Storage.Extensions.NameCollisionOptionExtensions.html",
    "title": "Class NameCollisionOptionExtensions | XPlat Windows APIs",
    "keywords": "Class NameCollisionOptionExtensions Inheritance System.Object NameCollisionOptionExtensions Namespace : XPlat.Storage.Extensions Assembly : XPlat.Storage.dll Syntax public static class NameCollisionOptionExtensions : object"
  },
  "api/XPlat.Storage.Extensions.StorageFileExtensions.html": {
    "href": "api/XPlat.Storage.Extensions.StorageFileExtensions.html",
    "title": "Class StorageFileExtensions | XPlat Windows APIs",
    "keywords": "Class StorageFileExtensions Inheritance System.Object StorageFileExtensions Namespace : XPlat.Storage.Extensions Assembly : XPlat.Storage.dll Syntax public static class StorageFileExtensions : object"
  },
  "api/XPlat.Storage.Extensions.StorageItemContentPropertiesExtensions.html": {
    "href": "api/XPlat.Storage.Extensions.StorageItemContentPropertiesExtensions.html",
    "title": "Class StorageItemContentPropertiesExtensions | XPlat Windows APIs",
    "keywords": "Class StorageItemContentPropertiesExtensions Defines a collection of common extensions for the Storage namespace. Inheritance System.Object StorageItemContentPropertiesExtensions Namespace : XPlat.Storage.Extensions Assembly : XPlat.Storage.dll Syntax public static class StorageItemContentPropertiesExtensions : object Methods | Improve this Doc View Source GetAllMediaPropertiesAsync(IStorageItemContentProperties) Gets all the media properties from a storage item. Declaration public static async Task<Dictionary<string, object>> GetAllMediaPropertiesAsync(this IStorageItemContentProperties storageProps) Parameters Type Name Description IStorageItemContentProperties storageProps The storage properties. Returns Type Description Task < Dictionary < System.String , System.Object >> When complete, this method returns a dictionary of key value pairs containing the media property and it's value."
  },
  "api/XPlat.Storage.FileAccessMode.html": {
    "href": "api/XPlat.Storage.FileAccessMode.html",
    "title": "Enum FileAccessMode | XPlat Windows APIs",
    "keywords": "Enum FileAccessMode Specifies whether to access a file in read-only mode or in read/write mode. Namespace : XPlat.Storage Assembly : XPlat.Storage.dll Syntax public enum FileAccessMode : int Fields Name Description Read Access the file stream in read-only mode. Keep read-only file streams open only while your app is actively reading from the file. You can use multiple independent read-only streams to read a file. If the file is changed while you're reading it, subsequent read operations fail. ReadWrite Access the file stream in read/write mode. A file supports a single stream for writing. Writing is non-transactional and occurs in place; that is, data is written immediately to the target file without using a temporary file. Use read/write mode only when you're ready to write immediately in order to avoid conflicts with other operations."
  },
  "api/XPlat.Storage.FileAttributes.html": {
    "href": "api/XPlat.Storage.FileAttributes.html",
    "title": "Enum FileAttributes | XPlat Windows APIs",
    "keywords": "Enum FileAttributes Describes the attributes of a file or folder. Namespace : XPlat.Storage Assembly : XPlat.Storage.dll Syntax public enum FileAttributes : int Fields Name Description Archive The item is archived. Directory The item is a directory. LocallyIncomplete The item is locally incomplete. Windows only. Normal The item is normal. That is, the item doesn't have any of the other values in the enumeration. ReadOnly The item is read-only. Temporary The item is a temporary file. Extension Methods FileAttributesExtensions.ToSystemFileAttributes()"
  },
  "api/XPlat.Storage.FileProperties.html": {
    "href": "api/XPlat.Storage.FileProperties.html",
    "title": "Namespace XPlat.Storage.FileProperties | XPlat Windows APIs",
    "keywords": "Namespace XPlat.Storage.FileProperties Interfaces IBasicProperties Provides access to the basic properties, like the size of the item or the date the item was last modified, of the item (like a file or folder). IImageProperties Provides access to the image-related properties of an item (like a file or folder). IMusicProperties Provides access to the music-related properties of an item (like a file or folder). IStorageItemContentProperties Provides access to the content-related properties of an item (like a file or folder). IVideoProperties Provides access to the video-related properties of an item (like a file or folder). Enums PhotoOrientation Indicates the Exchangeable Image File (EXIF) orientation flag of the photo. This flag describes how to rotate the photo to display it correctly. VideoOrientation Indicates how to rotate the video to display it correctly."
  },
  "api/XPlat.Storage.FileProperties.IBasicProperties.html": {
    "href": "api/XPlat.Storage.FileProperties.IBasicProperties.html",
    "title": "Interface IBasicProperties | XPlat Windows APIs",
    "keywords": "Interface IBasicProperties Provides access to the basic properties, like the size of the item or the date the item was last modified, of the item (like a file or folder). Namespace : XPlat.Storage.FileProperties Assembly : XPlat.Storage.dll Syntax public interface IBasicProperties Properties | Improve this Doc View Source DateModified Gets the timestamp of the last time the file was modified. Declaration DateTime DateModified { get; } Property Value Type Description DateTime | Improve this Doc View Source Size Gets the size of the file. Declaration ulong Size { get; } Property Value Type Description System.UInt64"
  },
  "api/XPlat.Storage.FileProperties.IImageProperties.html": {
    "href": "api/XPlat.Storage.FileProperties.IImageProperties.html",
    "title": "Interface IImageProperties | XPlat Windows APIs",
    "keywords": "Interface IImageProperties Provides access to the image-related properties of an item (like a file or folder). Namespace : XPlat.Storage.FileProperties Assembly : XPlat.Storage.dll Syntax public interface IImageProperties Properties | Improve this Doc View Source CameraManufacturer Gets the manufacturer of the camera that took the photo. Declaration string CameraManufacturer { get; } Property Value Type Description System.String | Improve this Doc View Source CameraModel Gets the model of the camera that took the photo. Declaration string CameraModel { get; } Property Value Type Description System.String | Improve this Doc View Source DateTaken Gets the date when the image was taken. Declaration string DateTaken { get; } Property Value Type Description System.String | Improve this Doc View Source Height Gets the height of the image. Declaration int Height { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Keywords Gets the collection of keywords associated with the image. Declaration IList<string> Keywords { get; } Property Value Type Description IList < System.String > | Improve this Doc View Source Latitude Gets the latitude coordinate where the photo was taken. Declaration double? Latitude { get; } Property Value Type Description System.Nullable < System.Double > | Improve this Doc View Source Longitude Gets the longitude coordinate where the photo was taken. Declaration double? Longitude { get; } Property Value Type Description System.Nullable < System.Double > | Improve this Doc View Source Orientation Gets the Exchangeable Image File (EXIF) orientation flag of the photo. Declaration PhotoOrientation Orientation { get; } Property Value Type Description PhotoOrientation | Improve this Doc View Source PeopleNames Gets the names of people who are tagged in the photo. Declaration IReadOnlyList<string> PeopleNames { get; } Property Value Type Description IReadOnlyList < System.String > | Improve this Doc View Source Rating Gets the rating associated with an image file. Declaration int Rating { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Title Gets the title of the image. Declaration string Title { get; } Property Value Type Description System.String | Improve this Doc View Source Width Gets the width of the image. Declaration int Width { get; } Property Value Type Description System.Int32"
  },
  "api/XPlat.Storage.FileProperties.IMusicProperties.html": {
    "href": "api/XPlat.Storage.FileProperties.IMusicProperties.html",
    "title": "Interface IMusicProperties | XPlat Windows APIs",
    "keywords": "Interface IMusicProperties Provides access to the music-related properties of an item (like a file or folder). Namespace : XPlat.Storage.FileProperties Assembly : XPlat.Storage.dll Syntax public interface IMusicProperties Properties | Improve this Doc View Source Album Gets the name of the album that contains the song. Declaration string Album { get; } Property Value Type Description System.String | Improve this Doc View Source AlbumArtist Gets the name of the album artist of the song. Declaration string AlbumArtist { get; } Property Value Type Description System.String | Improve this Doc View Source Artist Gets the artists that contributed to the song. Declaration string Artist { get; } Property Value Type Description System.String | Improve this Doc View Source Bitrate Gets the bit rate of the song file. Declaration int Bitrate { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Composers Gets the composers of the song. Declaration IList<string> Composers { get; } Property Value Type Description IList < System.String > | Improve this Doc View Source Conductors Gets the conductors of the song. Declaration IList<string> Conductors { get; } Property Value Type Description IList < System.String > | Improve this Doc View Source Duration Gets the duration of the song in milliseconds. Declaration TimeSpan Duration { get; } Property Value Type Description TimeSpan | Improve this Doc View Source Genre Gets the names of music genres that the song belongs to. Declaration IList<string> Genre { get; } Property Value Type Description IList < System.String > | Improve this Doc View Source Producers Gets the producers of the song. Declaration IList<string> Producers { get; } Property Value Type Description IList < System.String > | Improve this Doc View Source Publisher Gets the publisher of the song. Declaration string Publisher { get; } Property Value Type Description System.String | Improve this Doc View Source Rating Gets the rating associated with a music file. Declaration int Rating { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Subtitle Gets the subtitle of the song. Declaration string Subtitle { get; } Property Value Type Description System.String | Improve this Doc View Source Title Gets the title of the song Declaration string Title { get; } Property Value Type Description System.String | Improve this Doc View Source TrackNumber Gets the track number of the song on the song's album. Declaration int TrackNumber { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Writers Gets the songwriters. Declaration IList<string> Writers { get; } Property Value Type Description IList < System.String > | Improve this Doc View Source Year Gets the year that the song was released. Declaration int Year { get; } Property Value Type Description System.Int32"
  },
  "api/XPlat.Storage.FileProperties.IStorageItemContentProperties.html": {
    "href": "api/XPlat.Storage.FileProperties.IStorageItemContentProperties.html",
    "title": "Interface IStorageItemContentProperties | XPlat Windows APIs",
    "keywords": "Interface IStorageItemContentProperties Provides access to the content-related properties of an item (like a file or folder). Namespace : XPlat.Storage.FileProperties Assembly : XPlat.Storage.dll Syntax public interface IStorageItemContentProperties Methods | Improve this Doc View Source GetImagePropertiesAsync() Retrieves the image properties of the item (like a file of folder). Declaration Task<IImageProperties> GetImagePropertiesAsync() Returns Type Description Task < IImageProperties > When this method completes successfully, it returns an imageProperties object. | Improve this Doc View Source GetMusicPropertiesAsync() Retrieves the music properties of the item (like a file of folder). Declaration Task<IMusicProperties> GetMusicPropertiesAsync() Returns Type Description Task < IMusicProperties > When this method completes successfully, it returns a musicProperties object. | Improve this Doc View Source GetVideoPropertiesAsync() Retrieves the video properties of the item (like a file of folder). Declaration Task<IVideoProperties> GetVideoPropertiesAsync() Returns Type Description Task < IVideoProperties > When this method completes successfully, it returns a videoProperties object. | Improve this Doc View Source RetrievePropertiesAsync(IEnumerable<String>) Declaration Task<IDictionary<string, object>> RetrievePropertiesAsync(IEnumerable<string> propertiesToRetrieve) Parameters Type Name Description IEnumerable < System.String > propertiesToRetrieve Returns Type Description Task < IDictionary < System.String , System.Object >> Extension Methods StorageItemContentPropertiesExtensions.GetAllMediaPropertiesAsync(IStorageItemContentProperties)"
  },
  "api/XPlat.Storage.FileProperties.IVideoProperties.html": {
    "href": "api/XPlat.Storage.FileProperties.IVideoProperties.html",
    "title": "Interface IVideoProperties | XPlat Windows APIs",
    "keywords": "Interface IVideoProperties Provides access to the video-related properties of an item (like a file or folder). Namespace : XPlat.Storage.FileProperties Assembly : XPlat.Storage.dll Syntax public interface IVideoProperties Properties | Improve this Doc View Source Bitrate Gets the sum audio and video bitrate of the video. Declaration int Bitrate { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Directors Gets the directors of the video. Declaration IList<string> Directors { get; } Property Value Type Description IList < System.String > | Improve this Doc View Source Duration Gets the duration of the video. Declaration TimeSpan Duration { get; } Property Value Type Description TimeSpan | Improve this Doc View Source Height Gets the height of the video. Declaration int Height { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Keywords Gets the collection of keywords associated with the video. Declaration IList<string> Keywords { get; } Property Value Type Description IList < System.String > | Improve this Doc View Source Latitude Gets the latitude coordinate where the video was shot. Declaration double? Latitude { get; } Property Value Type Description System.Nullable < System.Double > | Improve this Doc View Source Longitude Gets the longitude coordinate where the video was shot. Declaration double? Longitude { get; } Property Value Type Description System.Nullable < System.Double > | Improve this Doc View Source Orientation Gets a VideoOrientation value that indicates how the video should be rotated to display it correctly. Declaration VideoOrientation Orientation { get; } Property Value Type Description VideoOrientation | Improve this Doc View Source Producers Gets the producers of the video. Declaration IList<string> Producers { get; } Property Value Type Description IList < System.String > | Improve this Doc View Source Publisher Gets the publisher of the video. Declaration string Publisher { get; } Property Value Type Description System.String | Improve this Doc View Source Rating Gets the rating associated with a video file. Declaration int Rating { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Subtitle Gets the subtitle of the video. Declaration string Subtitle { get; } Property Value Type Description System.String | Improve this Doc View Source Title Gets the title of the video. Declaration string Title { get; } Property Value Type Description System.String | Improve this Doc View Source Width Gets the width of the video. Declaration int Width { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Writers Gets the script writers for the video. Declaration IList<string> Writers { get; } Property Value Type Description IList < System.String > | Improve this Doc View Source Year Gets the year that the video was shot or released. Declaration int Year { get; } Property Value Type Description System.Int32"
  },
  "api/XPlat.Storage.FileProperties.PhotoOrientation.html": {
    "href": "api/XPlat.Storage.FileProperties.PhotoOrientation.html",
    "title": "Enum PhotoOrientation | XPlat Windows APIs",
    "keywords": "Enum PhotoOrientation Indicates the Exchangeable Image File (EXIF) orientation flag of the photo. This flag describes how to rotate the photo to display it correctly. Namespace : XPlat.Storage.FileProperties Assembly : XPlat.Storage.dll Syntax public enum PhotoOrientation : int Fields Name Description FlipHorizontal Flip the photo horizontally. FlipVertical Flip the photo vertically. Normal No rotation needed. The photo can be displayed using its current orientation. Rotate180 Rotate the photo 180 degrees. Rotate270 Rotate the photo counter-clockwise 270 degrees. Rotate90 Rotate the photo counter-clockwise 90 degrees. Transpose Rotate the photo counter-clockwise 90 degrees and then flip it horizontally. Transverse Rotate the photo counter-clockwise 270 degrees and then flip it horizontally. Unspecified An orientation flag is not set."
  },
  "api/XPlat.Storage.FileProperties.VideoOrientation.html": {
    "href": "api/XPlat.Storage.FileProperties.VideoOrientation.html",
    "title": "Enum VideoOrientation | XPlat Windows APIs",
    "keywords": "Enum VideoOrientation Indicates how to rotate the video to display it correctly. Namespace : XPlat.Storage.FileProperties Assembly : XPlat.Storage.dll Syntax public enum VideoOrientation : int Fields Name Description Normal No rotation needed. The video can be displayed using its current orientation. Rotate180 Rotate the video counter-clockwise 180 degrees. Rotate270 Rotate the video counter-clockwise 270 degrees. Rotate90 Rotate the video 90 degrees."
  },
  "api/XPlat.Storage.Helpers.html": {
    "href": "api/XPlat.Storage.Helpers.html",
    "title": "Namespace XPlat.Storage.Helpers | XPlat Windows APIs",
    "keywords": "Namespace XPlat.Storage.Helpers Classes MimeTypeHelper StorageHelper"
  },
  "api/XPlat.Storage.Helpers.MimeTypeHelper.html": {
    "href": "api/XPlat.Storage.Helpers.MimeTypeHelper.html",
    "title": "Class MimeTypeHelper | XPlat Windows APIs",
    "keywords": "Class MimeTypeHelper Inheritance System.Object MimeTypeHelper Namespace : XPlat.Storage.Helpers Assembly : XPlat.Storage.dll Syntax public static class MimeTypeHelper : object Methods | Improve this Doc View Source GetMimeType(String) Declaration public static string GetMimeType(string fileType) Parameters Type Name Description System.String fileType Returns Type Description System.String | Improve this Doc View Source GetMimeTypes(IEnumerable<String>) Declaration public static IEnumerable<string> GetMimeTypes(IEnumerable<string> fileTypes) Parameters Type Name Description IEnumerable < System.String > fileTypes Returns Type Description IEnumerable < System.String >"
  },
  "api/XPlat.Storage.Helpers.StorageHelper.html": {
    "href": "api/XPlat.Storage.Helpers.StorageHelper.html",
    "title": "Class StorageHelper | XPlat Windows APIs",
    "keywords": "Class StorageHelper Inheritance System.Object StorageHelper Namespace : XPlat.Storage.Helpers Assembly : XPlat.Storage.dll Syntax public static class StorageHelper : object Methods | Improve this Doc View Source CreateStorageFile(IStorageFolder, String) Declaration public static IStorageFile CreateStorageFile(IStorageFolder folder, string name) Parameters Type Name Description IStorageFolder folder System.String name Returns Type Description IStorageFile | Improve this Doc View Source CreateStorageFile(IStorageFolder, String, CreationCollisionOption) Declaration public static IStorageFile CreateStorageFile(IStorageFolder folder, string name, CreationCollisionOption collisionOption) Parameters Type Name Description IStorageFolder folder System.String name CreationCollisionOption collisionOption Returns Type Description IStorageFile | Improve this Doc View Source CreateStorageFolder(IStorageFolder, String) Declaration public static IStorageFolder CreateStorageFolder(IStorageFolder folder, string name) Parameters Type Name Description IStorageFolder folder System.String name Returns Type Description IStorageFolder | Improve this Doc View Source CreateStorageFolder(IStorageFolder, String, CreationCollisionOption) Declaration public static IStorageFolder CreateStorageFolder(IStorageFolder folder, string name, CreationCollisionOption collisionOption) Parameters Type Name Description IStorageFolder folder System.String name CreationCollisionOption collisionOption Returns Type Description IStorageFolder | Improve this Doc View Source DeleteStorageItem(IStorageItem) Declaration public static void DeleteStorageItem(IStorageItem item) Parameters Type Name Description IStorageItem item | Improve this Doc View Source GetBasicProperties(IStorageItem) Declaration public static IBasicProperties GetBasicProperties(IStorageItem item) Parameters Type Name Description IStorageItem item Returns Type Description IBasicProperties | Improve this Doc View Source GetFolderItems(IStorageFolderQueryOperations, Int32, Int32) Declaration public static IReadOnlyList<IStorageItem> GetFolderItems(IStorageFolderQueryOperations folder, int idx, int count) Parameters Type Name Description IStorageFolderQueryOperations folder System.Int32 idx System.Int32 count Returns Type Description IReadOnlyList < IStorageItem > | Improve this Doc View Source RetrieveProperties(IStorageItemProperties, IEnumerable<String>) Declaration public static IDictionary<string, object> RetrieveProperties(IStorageItemProperties item, IEnumerable<string> propertiesToRetrieve) Parameters Type Name Description IStorageItemProperties item IEnumerable < System.String > propertiesToRetrieve Returns Type Description IDictionary < System.String , System.Object > | Improve this Doc View Source TryGetItem(IStorageFolder2, String) Declaration public static IStorageItem TryGetItem(IStorageFolder2 folder, string name) Parameters Type Name Description IStorageFolder2 folder System.String name Returns Type Description IStorageItem | Improve this Doc View Source WriteTextToFile(IStorageFileExtras, String) Declaration public static void WriteTextToFile(IStorageFileExtras file, string text) Parameters Type Name Description IStorageFileExtras file System.String text"
  },
  "api/XPlat.Storage.html": {
    "href": "api/XPlat.Storage.html",
    "title": "Namespace XPlat.Storage | XPlat Windows APIs",
    "keywords": "Namespace XPlat.Storage Classes StorageFileIOException StorageItemCreationException StorageItemException StorageItemNotFoundException Interfaces IApplicationData Provides access to the application data store. IApplicationDataContainer Represents a container for app settings. IApplicationDataExtras Provides additional extra methods for accessing data from the application data store. IStorageFile Represents a file. Provides information about the file and its contents, and ways to manipulate them. IStorageFileExtras Provides additional extra methods for manipulating data for storage files. IStorageFolder Manipulates folders and their contents, and provides information about them. IStorageFolder2 Manipulates folders and their contents, and provides information about them. IStorageFolderExtras Provides additional extra methods for getting items from within storage folders. IStorageItem Manipulates storage items (files and folders) and their contents, and provides information about them. IStorageItem2 Manipulates storage items (files and folders) and their contents, and provides information about them. IStorageItemProperties Provides access to common and content properties on items (like files and folders). Enums ApplicationDataCreateDisposition Specifies options for creating application data containers or returning existing containers. This enumeration is used by the ApplicationDataContainer.CreateContainer method. ApplicationDataLocality Specifies the type of an application data store. CreationCollisionOption Specifies what to do if a file or folder with the specified name already exists in the current folder when you create a new file or folder. FileAccessMode Specifies whether to access a file in read-only mode or in read/write mode. FileAttributes Describes the attributes of a file or folder. NameCollisionOption Specifies what to do if a file or folder with the specified name already exists in the current folder when you copy, move, or rename a file or folder. StorageItemTypes Describes whether an item that implements the IStorageItem interface is a file or a folder."
  },
  "api/XPlat.Storage.IApplicationData.html": {
    "href": "api/XPlat.Storage.IApplicationData.html",
    "title": "Interface IApplicationData | XPlat Windows APIs",
    "keywords": "Interface IApplicationData Provides access to the application data store. Namespace : XPlat.Storage Assembly : XPlat.Storage.dll Syntax public interface IApplicationData Properties | Improve this Doc View Source LocalFolder Gets the root folder in the local app data store. Declaration IStorageFolder LocalFolder { get; } Property Value Type Description IStorageFolder | Improve this Doc View Source LocalSettings Gets the application settings container in the local app data store. Declaration IApplicationDataContainer LocalSettings { get; } Property Value Type Description IApplicationDataContainer | Improve this Doc View Source RoamingFolder Gets the root folder in the roaming app data store. Declaration IStorageFolder RoamingFolder { get; } Property Value Type Description IStorageFolder | Improve this Doc View Source RoamingSettings Gets the application settings container in the roaming app data store. Declaration IApplicationDataContainer RoamingSettings { get; } Property Value Type Description IApplicationDataContainer | Improve this Doc View Source TemporaryFolder Gets the root folder in the temporary app data store. Declaration IStorageFolder TemporaryFolder { get; } Property Value Type Description IStorageFolder Methods | Improve this Doc View Source ClearAsync() Removes all application data from the local, roaming, and temporary app data stores. Declaration Task ClearAsync() Returns Type Description Task An object that is used to manage the asynchronous clear operation. | Improve this Doc View Source ClearAsync(ApplicationDataLocality) Removes all application data from the specified app data store. Declaration Task ClearAsync(ApplicationDataLocality locality) Parameters Type Name Description ApplicationDataLocality locality One of the enumeration values. Returns Type Description Task An object that is used to manage the asynchronous clear operation."
  },
  "api/XPlat.Storage.IApplicationDataContainer.html": {
    "href": "api/XPlat.Storage.IApplicationDataContainer.html",
    "title": "Interface IApplicationDataContainer | XPlat Windows APIs",
    "keywords": "Interface IApplicationDataContainer Represents a container for app settings. Namespace : XPlat.Storage Assembly : XPlat.Storage.dll Syntax public interface IApplicationDataContainer Properties | Improve this Doc View Source Locality Gets the type (local or roaming) of the app data store that is associated with the current settings container. Declaration ApplicationDataLocality Locality { get; } Property Value Type Description ApplicationDataLocality | Improve this Doc View Source Name Gets the name of the current settings container. Declaration string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Values Gets an object that represents the settings in this settings container. Declaration IPropertySet Values { get; } Property Value Type Description IPropertySet Methods | Improve this Doc View Source CreateContainer(String, ApplicationDataCreateDisposition) Creates or opens the specified settings container in the current settings container. Declaration IApplicationDataContainer CreateContainer(string name, ApplicationDataCreateDisposition disposition) Parameters Type Name Description System.String name The name of the container. ApplicationDataCreateDisposition disposition One of the enumeration values. Returns Type Description IApplicationDataContainer The settings container. | Improve this Doc View Source DeleteContainer(String) Deletes the specified settings container, its subcontainers, and all application settings in the hierarchy. Declaration void DeleteContainer(string name) Parameters Type Name Description System.String name The name of the settings container."
  },
  "api/XPlat.Storage.IApplicationDataExtras.html": {
    "href": "api/XPlat.Storage.IApplicationDataExtras.html",
    "title": "Interface IApplicationDataExtras | XPlat Windows APIs",
    "keywords": "Interface IApplicationDataExtras Provides additional extra methods for accessing data from the application data store. Namespace : XPlat.Storage Assembly : XPlat.Storage.dll Syntax public interface IApplicationDataExtras Methods | Improve this Doc View Source GetFileFromPathAsync(String) Retrieves a IStorageFile by the given path . Declaration Task<IStorageFile> GetFileFromPathAsync(string path) Parameters Type Name Description System.String path The path to the file. Returns Type Description Task < IStorageFile > The IStorageFile ."
  },
  "api/XPlat.Storage.IStorageFile.html": {
    "href": "api/XPlat.Storage.IStorageFile.html",
    "title": "Interface IStorageFile | XPlat Windows APIs",
    "keywords": "Interface IStorageFile Represents a file. Provides information about the file and its contents, and ways to manipulate them. Inherited Members IStorageItemProperties.DisplayName IStorageItemProperties.Properties IStorageItem2.GetParentAsync() IStorageItem2.IsEqual(IStorageItem) IStorageItem.RenameAsync(String) IStorageItem.RenameAsync(String, NameCollisionOption) IStorageItem.DeleteAsync() IStorageItem.GetBasicPropertiesAsync() IStorageItem.IsOfType(StorageItemTypes) IStorageItem.Attributes IStorageItem.DateCreated IStorageItem.Name IStorageItem.Path IStorageItem.Exists IStorageFileExtras.OpenReadAsync() IStorageFileExtras.WriteTextAsync(String) IStorageFileExtras.ReadTextAsync() IStorageFileExtras.WriteBytesAsync(Byte[]) IStorageFileExtras.ReadBytesAsync() Namespace : XPlat.Storage Assembly : XPlat.Storage.dll Syntax public interface IStorageFile : IStorageItemProperties, IStorageItem2, IStorageItem, IStorageFileExtras Properties | Improve this Doc View Source ContentType Gets the MIME type of the contents of the file. Declaration string ContentType { get; } Property Value Type Description System.String | Improve this Doc View Source FileType Gets the type (file name extension) of the file. Declaration string FileType { get; } Property Value Type Description System.String Methods | Improve this Doc View Source CopyAndReplaceAsync(IStorageFile) Replaces the specified file with a copy of the current file. Declaration Task CopyAndReplaceAsync(IStorageFile fileToReplace) Parameters Type Name Description IStorageFile fileToReplace The file to replace. Returns Type Description Task No object or value is returned when this method completes. | Improve this Doc View Source CopyAsync(IStorageFolder) Creates a copy of the file in the specified folder. Declaration Task<IStorageFile> CopyAsync(IStorageFolder destinationFolder) Parameters Type Name Description IStorageFolder destinationFolder The destination folder where the copy is created. Returns Type Description Task < IStorageFile > When this method completes, it returns a StorageFile that represents the copy. | Improve this Doc View Source CopyAsync(IStorageFolder, String) Creates a copy of the file in the specified folder, using the desired name. Declaration Task<IStorageFile> CopyAsync(IStorageFolder destinationFolder, string desiredNewName) Parameters Type Name Description IStorageFolder destinationFolder The destination folder where the copy is created. System.String desiredNewName The desired name of the copy. If there is an existing file in the destination folder that already has the specified desiredNewName, Windows generates a unique name for the copy. Returns Type Description Task < IStorageFile > When this method completes, it returns a StorageFile that represents the copy. | Improve this Doc View Source CopyAsync(IStorageFolder, String, NameCollisionOption) Creates a copy of the file in the specified folder, using the desired name. This method also specifies what to do if an existing file in the specified folder has the same name. Declaration Task<IStorageFile> CopyAsync(IStorageFolder destinationFolder, string desiredNewName, NameCollisionOption option) Parameters Type Name Description IStorageFolder destinationFolder The destination folder where the copy is created. System.String desiredNewName The desired name of the copy. If there is an existing file in the destination folder that already has the specified desiredNewName, the specified NameCollisionOption determines how Windows responds to the conflict. NameCollisionOption option An enum value that determines how Windows responds if the desiredNewName is the same as the name of an existing file in the destination folder. Returns Type Description Task < IStorageFile > When this method completes, it returns a StorageFile that represents the copy. | Improve this Doc View Source MoveAndReplaceAsync(IStorageFile) Moves the current file to the location of the specified file and replaces the specified file in that location. Declaration Task MoveAndReplaceAsync(IStorageFile fileToReplace) Parameters Type Name Description IStorageFile fileToReplace The file to replace. Returns Type Description Task No object or value is returned by this method. | Improve this Doc View Source MoveAsync(IStorageFolder) Moves the current file to the specified folder. Declaration Task MoveAsync(IStorageFolder destinationFolder) Parameters Type Name Description IStorageFolder destinationFolder The destination folder where the file is moved. This destination folder must be a physical location. Otherwise, if the destination folder exists only in memory, like a file group, this method fails and throws an exception. Returns Type Description Task No object or value is returned by this method. | Improve this Doc View Source MoveAsync(IStorageFolder, String) Moves the current file to the specified folder and renames the file according to the desired name. Declaration Task MoveAsync(IStorageFolder destinationFolder, string desiredNewName) Parameters Type Name Description IStorageFolder destinationFolder The destination folder where the file is moved. This destination folder must be a physical location. Otherwise, if the destination folder exists only in memory, like a file group, this method fails and throws an exception. System.String desiredNewName The desired name of the file after it is moved. If there is an existing file in the destination folder that already has the specified desiredNewName, Windows generates a unique name for the file. Returns Type Description Task No object or value is returned by this method. | Improve this Doc View Source MoveAsync(IStorageFolder, String, NameCollisionOption) Moves the current file to the specified folder and renames the file according to the desired name. This method also specifies what to do if a file with the same name already exists in the specified folder. Declaration Task MoveAsync(IStorageFolder destinationFolder, string desiredNewName, NameCollisionOption option) Parameters Type Name Description IStorageFolder destinationFolder The destination folder where the file is moved. This destination folder must be a physical location. Otherwise, if the destination folder exists only in memory, like a file group, this method fails and throws an exception. System.String desiredNewName The desired name of the file after it is moved. If there is an existing file in the destination folder that already has the specified desiredNewName, the specified NameCollisionOption determines how Windows responds to the conflict. NameCollisionOption option An enum value that determines how Windows responds if the desiredNewName is the same as the name of an existing file in the destination folder. Returns Type Description Task No object or value is returned by this method. | Improve this Doc View Source OpenAsync(FileAccessMode) Opens a stream over the file. Declaration Task<Stream> OpenAsync(FileAccessMode accessMode) Parameters Type Name Description FileAccessMode accessMode The type of access to allow. Returns Type Description Task < Stream > When this method completes, it returns the stream."
  },
  "api/XPlat.Storage.IStorageFileExtras.html": {
    "href": "api/XPlat.Storage.IStorageFileExtras.html",
    "title": "Interface IStorageFileExtras | XPlat Windows APIs",
    "keywords": "Interface IStorageFileExtras Provides additional extra methods for manipulating data for storage files. Namespace : XPlat.Storage Assembly : XPlat.Storage.dll Syntax public interface IStorageFileExtras Methods | Improve this Doc View Source OpenReadAsync() Opens a stream over the current file for reading file contents. Declaration Task<Stream> OpenReadAsync() Returns Type Description Task < Stream > When this method completes, it returns the stream. | Improve this Doc View Source ReadBytesAsync() Reads the current file as a byte array. Declaration Task<byte[]> ReadBytesAsync() Returns Type Description Task < System.Byte []> When this method completes, it returns the file's content as a byte array. | Improve this Doc View Source ReadTextAsync() Reads the current file as a string. Declaration Task<string> ReadTextAsync() Returns Type Description Task < System.String > When this method completes, it returns the file's content as a string. | Improve this Doc View Source WriteBytesAsync(Byte[]) Writes a byte array to the current file. Declaration Task WriteBytesAsync(byte[] bytes) Parameters Type Name Description System.Byte [] bytes The byte array to write out. Returns Type Description Task An object that is used to manage the asynchronous operation. | Improve this Doc View Source WriteTextAsync(String) Writes a string to the current file. Declaration Task WriteTextAsync(string text) Parameters Type Name Description System.String text The text to write out. Returns Type Description Task An object that is used to manage the asynchronous operation."
  },
  "api/XPlat.Storage.IStorageFolder.html": {
    "href": "api/XPlat.Storage.IStorageFolder.html",
    "title": "Interface IStorageFolder | XPlat Windows APIs",
    "keywords": "Interface IStorageFolder Manipulates folders and their contents, and provides information about them. Inherited Members IStorageFolderExtras.GetFileAsync(String, Boolean) IStorageFolderExtras.GetFolderAsync(String, Boolean) IStorageFolderExtras.ClearAsync() IStorageFolderQueryOperations.GetItemsAsync(Int32, Int32) IStorageItemProperties.DisplayName IStorageItemProperties.Properties IStorageItem2.GetParentAsync() IStorageItem2.IsEqual(IStorageItem) IStorageItem.RenameAsync(String) IStorageItem.RenameAsync(String, NameCollisionOption) IStorageItem.DeleteAsync() IStorageItem.GetBasicPropertiesAsync() IStorageItem.IsOfType(StorageItemTypes) IStorageItem.Attributes IStorageItem.DateCreated IStorageItem.Name IStorageItem.Path IStorageItem.Exists IStorageFolder2.TryGetItemAsync(String) Namespace : XPlat.Storage Assembly : XPlat.Storage.dll Syntax public interface IStorageFolder : IStorageFolderExtras, IStorageFolderQueryOperations, IStorageItemProperties, IStorageItem2, IStorageItem, IStorageFolder2 Methods | Improve this Doc View Source CreateFileAsync(String) Creates a new file in the current folder. Declaration Task<IStorageFile> CreateFileAsync(string desiredName) Parameters Type Name Description System.String desiredName The desired name of the file to create. Returns Type Description Task < IStorageFile > When this method completes, it returns the new file as a StorageFile. | Improve this Doc View Source CreateFileAsync(String, CreationCollisionOption) Creates a new file in the current folder, and specifies what to do if a file with the same name already exists in the current folder. Declaration Task<IStorageFile> CreateFileAsync(string desiredName, CreationCollisionOption options) Parameters Type Name Description System.String desiredName The desired name of the file to create. If there is an existing file in the current folder that already has the specified desiredName, the specified CreationCollisionOption determines how Windows responds to the conflict. CreationCollisionOption options The enum value that determines how Windows responds if the desiredName is the same as the name of an existing file in the current folder. Returns Type Description Task < IStorageFile > When this method completes, it returns the new file as a StorageFile. | Improve this Doc View Source CreateFolderAsync(String) Creates a new folder in the current folder. Declaration Task<IStorageFolder> CreateFolderAsync(string desiredName) Parameters Type Name Description System.String desiredName The desired name of the folder to create. Returns Type Description Task < IStorageFolder > When this method completes, it returns the new folder as a StorageFolder. | Improve this Doc View Source CreateFolderAsync(String, CreationCollisionOption) Creates a new folder in the current folder, and specifies what to do if a folder with the same name already exists in the current folder. Declaration Task<IStorageFolder> CreateFolderAsync(string desiredName, CreationCollisionOption options) Parameters Type Name Description System.String desiredName The desired name of the folder to create. If there is an existing folder in the current folder that already has the specified desiredName, the specified CreationCollisionOption determines how Windows responds to the conflict. CreationCollisionOption options The enum value that determines how Windows responds if the desiredName is the same as the name of an existing folder in the current folder. Returns Type Description Task < IStorageFolder > When this method completes, it returns the new folder as a StorageFolder. | Improve this Doc View Source GetFileAsync(String) Gets the specified file from the current folder. Declaration Task<IStorageFile> GetFileAsync(string name) Parameters Type Name Description System.String name The name (or path relative to the current folder) of the file to retrieve. Returns Type Description Task < IStorageFile > When this method completes successfully, it returns a StorageFile that represents the file. | Improve this Doc View Source GetFilesAsync() Gets the files from the current folder. Declaration Task<IReadOnlyList<IStorageFile>> GetFilesAsync() Returns Type Description Task < IReadOnlyList < IStorageFile >> When this method completes successfully, it returns a list of the files (type IVectorView) in the folder. Each file in the list is represented by a StorageFile object. | Improve this Doc View Source GetFolderAsync(String) Gets the specified folder from the current folder. Declaration Task<IStorageFolder> GetFolderAsync(string name) Parameters Type Name Description System.String name The name of the child folder to retrieve. Returns Type Description Task < IStorageFolder > When this method completes successfully, it returns a StorageFolder that represents the child folder. | Improve this Doc View Source GetFoldersAsync() Gets the folders in the current folder. Declaration Task<IReadOnlyList<IStorageFolder>> GetFoldersAsync() Returns Type Description Task < IReadOnlyList < IStorageFolder >> When this method completes successfully, it returns a list of the files (type IVectorView). Each folder in the list is represented by a StorageFolder. | Improve this Doc View Source GetItemAsync(String) Gets the specified item from the IStorageFolder. Declaration Task<IStorageItem> GetItemAsync(string name) Parameters Type Name Description System.String name The name of the item to retrieve. Returns Type Description Task < IStorageItem > When this method completes successfully, it returns the file or folder (type IStorageItem). | Improve this Doc View Source GetItemsAsync() Gets the items from the current folder. Declaration Task<IReadOnlyList<IStorageItem>> GetItemsAsync() Returns Type Description Task < IReadOnlyList < IStorageItem >> When this method completes successfully, it returns a list of the files and folders (type IVectorView). The files and folders in the list are represented by objects of type IStorageItem."
  },
  "api/XPlat.Storage.IStorageFolder2.html": {
    "href": "api/XPlat.Storage.IStorageFolder2.html",
    "title": "Interface IStorageFolder2 | XPlat Windows APIs",
    "keywords": "Interface IStorageFolder2 Manipulates folders and their contents, and provides information about them. Namespace : XPlat.Storage Assembly : XPlat.Storage.dll Syntax public interface IStorageFolder2 Methods | Improve this Doc View Source TryGetItemAsync(String) Try to get a single file or sub-folder from the current folder by using the name of the item. Declaration Task<IStorageItem> TryGetItemAsync(string name) Parameters Type Name Description System.String name The name (or path relative to the current folder) of the file or sub-folder to try to retrieve. Returns Type Description Task < IStorageItem > When this method completes successfully, it returns the file or folder (type IStorageItem)."
  },
  "api/XPlat.Storage.IStorageFolderExtras.html": {
    "href": "api/XPlat.Storage.IStorageFolderExtras.html",
    "title": "Interface IStorageFolderExtras | XPlat Windows APIs",
    "keywords": "Interface IStorageFolderExtras Provides additional extra methods for getting items from within storage folders. Namespace : XPlat.Storage Assembly : XPlat.Storage.dll Syntax public interface IStorageFolderExtras Methods | Improve this Doc View Source ClearAsync() Clears the folder of it's contents. Declaration Task ClearAsync() Returns Type Description Task An object that is used to manage the asynchronous clear operation. | Improve this Doc View Source GetFileAsync(String, Boolean) Gets the specified file from the current folder. Declaration Task<IStorageFile> GetFileAsync(string name, bool createIfNotExists) Parameters Type Name Description System.String name The name of the file to retrieve. If the file does not exist in the current folder, the createIfNotExists flag will allow the API to create the file if set to true. System.Boolean createIfNotExists A value indicating whether to create the file if it does not exist. Returns Type Description Task < IStorageFile > When this method completes successfully, it returns an IStorageFile that represents the file. | Improve this Doc View Source GetFolderAsync(String, Boolean) Gets the specified folder from the current folder. Declaration Task<IStorageFolder> GetFolderAsync(string name, bool createIfNotExists) Parameters Type Name Description System.String name The name of the child folder to retrieve. If the child folder does not exist in the current folder, the createIfNotExists flag will allow the API to create the folder if set to true. System.Boolean createIfNotExists A value indicating whether to create the child folder if it does not exist. Returns Type Description Task < IStorageFolder > When this method completes successfully, it returns an IStorageFolder that represents the child folder."
  },
  "api/XPlat.Storage.IStorageItem.html": {
    "href": "api/XPlat.Storage.IStorageItem.html",
    "title": "Interface IStorageItem | XPlat Windows APIs",
    "keywords": "Interface IStorageItem Manipulates storage items (files and folders) and their contents, and provides information about them. Namespace : XPlat.Storage Assembly : XPlat.Storage.dll Syntax public interface IStorageItem Properties | Improve this Doc View Source Attributes Gets the attributes of a storage item. Declaration FileAttributes Attributes { get; } Property Value Type Description FileAttributes | Improve this Doc View Source DateCreated Gets the date and time when the current item was created. Declaration DateTime DateCreated { get; } Property Value Type Description DateTime | Improve this Doc View Source Exists Gets a value indicating whether the item exists. Declaration bool Exists { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Gets the name of the item including the file name extension if there is one. Declaration string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Path Gets the full file-system path of the item, if the item has a path. Declaration string Path { get; } Property Value Type Description System.String Methods | Improve this Doc View Source DeleteAsync() Deletes the current item. Declaration Task DeleteAsync() Returns Type Description Task No object or value is returned by this method when it completes. | Improve this Doc View Source GetBasicPropertiesAsync() Gets the basic properties of the current item (like a file or folder). Declaration Task<IBasicProperties> GetBasicPropertiesAsync() Returns Type Description Task < IBasicProperties > When this method completes successfully, it returns the basic properties of the current item as a BasicProperties object. | Improve this Doc View Source IsOfType(StorageItemTypes) Determines whether the current IStorageItem matches the specified StorageItemTypes value. Declaration bool IsOfType(StorageItemTypes type) Parameters Type Name Description StorageItemTypes type The value to match against. Returns Type Description System.Boolean True if the IStorageItem matches the specified value; otherwise false. | Improve this Doc View Source RenameAsync(String) Renames the current item. Declaration Task RenameAsync(string desiredName) Parameters Type Name Description System.String desiredName The desired, new name of the item. Returns Type Description Task No object or value is returned by this method when it completes. | Improve this Doc View Source RenameAsync(String, NameCollisionOption) Renames the current item. This method also specifies what to do if an existing item in the current item's location has the same name. Declaration Task RenameAsync(string desiredName, NameCollisionOption option) Parameters Type Name Description System.String desiredName The desired, new name of the current item. If there is an existing item in the current item's location that already has the specified desiredName, the specified NameCollisionOption determines how Windows responds to the conflict. NameCollisionOption option The enum value that determines how the system responds if the desiredName is the same as the name of an existing item in the current item's location. Returns Type Description Task No object or value is returned by this method when it completes."
  },
  "api/XPlat.Storage.IStorageItem2.html": {
    "href": "api/XPlat.Storage.IStorageItem2.html",
    "title": "Interface IStorageItem2 | XPlat Windows APIs",
    "keywords": "Interface IStorageItem2 Manipulates storage items (files and folders) and their contents, and provides information about them. Inherited Members IStorageItem.RenameAsync(String) IStorageItem.RenameAsync(String, NameCollisionOption) IStorageItem.DeleteAsync() IStorageItem.GetBasicPropertiesAsync() IStorageItem.IsOfType(StorageItemTypes) IStorageItem.Attributes IStorageItem.DateCreated IStorageItem.Name IStorageItem.Path IStorageItem.Exists Namespace : XPlat.Storage Assembly : XPlat.Storage.dll Syntax public interface IStorageItem2 : IStorageItem Methods | Improve this Doc View Source GetParentAsync() Gets the parent folder of the current storage item. Declaration Task<IStorageFolder> GetParentAsync() Returns Type Description Task < IStorageFolder > When this method completes, it returns the parent folder as a StorageFolder. | Improve this Doc View Source IsEqual(IStorageItem) Indicates whether the current item is the same as the specified item. Declaration bool IsEqual(IStorageItem item) Parameters Type Name Description IStorageItem item The IStorageItem object that represents a storage item to compare against. Returns Type Description System.Boolean Returns true if the current storage item is the same as the specified storage item; otherwise false."
  },
  "api/XPlat.Storage.IStorageItemProperties.html": {
    "href": "api/XPlat.Storage.IStorageItemProperties.html",
    "title": "Interface IStorageItemProperties | XPlat Windows APIs",
    "keywords": "Interface IStorageItemProperties Provides access to common and content properties on items (like files and folders). Namespace : XPlat.Storage Assembly : XPlat.Storage.dll Syntax public interface IStorageItemProperties Properties | Improve this Doc View Source DisplayName Gets the user-friendly name of the item. Declaration string DisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source Properties Gets an object that provides access to the content-related properties of the item. Declaration IStorageItemContentProperties Properties { get; } Property Value Type Description IStorageItemContentProperties"
  },
  "api/XPlat.Storage.NameCollisionOption.html": {
    "href": "api/XPlat.Storage.NameCollisionOption.html",
    "title": "Enum NameCollisionOption | XPlat Windows APIs",
    "keywords": "Enum NameCollisionOption Specifies what to do if a file or folder with the specified name already exists in the current folder when you copy, move, or rename a file or folder. Namespace : XPlat.Storage Assembly : XPlat.Storage.dll Syntax public enum NameCollisionOption : int Fields Name Description FailIfExists Raise an exception of type System.Exception if the file or folder already exists.Methods that don't explicitly pass a value from the NameCollisionOption enumeration use the FailIfExists value as the default when you try to create, rename, copy, or move a file or folder. GenerateUniqueName Automatically append a number to the base of the specified name if the file or folder already exists.For example, if MyFile.txt already exists, then the new file is named MyFile (2).txt. If MyFolder already exists, then the new folder is named MyFolder (2). ReplaceExisting Replace the existing item if the file or folder already exists."
  },
  "api/XPlat.Storage.Pickers.html": {
    "href": "api/XPlat.Storage.Pickers.html",
    "title": "Namespace XPlat.Storage.Pickers | XPlat Windows APIs",
    "keywords": "Namespace XPlat.Storage.Pickers Interfaces IFileOpenPicker Represents a UI element that lets the user choose and open files."
  },
  "api/XPlat.Storage.Pickers.IFileOpenPicker.html": {
    "href": "api/XPlat.Storage.Pickers.IFileOpenPicker.html",
    "title": "Interface IFileOpenPicker | XPlat Windows APIs",
    "keywords": "Interface IFileOpenPicker Represents a UI element that lets the user choose and open files. Namespace : XPlat.Storage.Pickers Assembly : XPlat.Storage.Pickers.dll Syntax public interface IFileOpenPicker Properties | Improve this Doc View Source FileTypeFilter Gets the collection of file types that the file open picker displays. Declaration IList<string> FileTypeFilter { get; } Property Value Type Description IList < System.String > Methods | Improve this Doc View Source PickMultipleFilesAsync() Shows the file picker so that the user can pick multiple files. (Windows Store app) Declaration Task<IReadOnlyList<IStorageFile>> PickMultipleFilesAsync() Returns Type Description Task < IReadOnlyList < IStorageFile >> When the call to this method completes successfully, it returns a filePickerSelectedFilesArray object that contains all the files that were picked by the user. Picked files in this array are represented by storageFile objects. | Improve this Doc View Source PickSingleFileAsync() Shows the file picker so that the user can pick one file. Declaration Task<IStorageFile> PickSingleFileAsync() Returns Type Description Task < IStorageFile > When the call to this method completes successfully, it returns a StorageFile object that represents the file that the user picked."
  },
  "api/XPlat.Storage.Search.html": {
    "href": "api/XPlat.Storage.Search.html",
    "title": "Namespace XPlat.Storage.Search | XPlat Windows APIs",
    "keywords": "Namespace XPlat.Storage.Search Interfaces IStorageFolderQueryOperations Provides methods to create search queries and retrieve files from a folder. This interface is implemented by StorageFolder objects, which can represent file system folders, libraries, or virtual folders that are automatically generated when queries are created using group-based CommonFolderQuery values like GroupByAlbum."
  },
  "api/XPlat.Storage.Search.IStorageFolderQueryOperations.html": {
    "href": "api/XPlat.Storage.Search.IStorageFolderQueryOperations.html",
    "title": "Interface IStorageFolderQueryOperations | XPlat Windows APIs",
    "keywords": "Interface IStorageFolderQueryOperations Provides methods to create search queries and retrieve files from a folder. This interface is implemented by StorageFolder objects, which can represent file system folders, libraries, or virtual folders that are automatically generated when queries are created using group-based CommonFolderQuery values like GroupByAlbum. Namespace : XPlat.Storage.Search Assembly : XPlat.Storage.dll Syntax public interface IStorageFolderQueryOperations Methods | Improve this Doc View Source GetItemsAsync(Int32, Int32) Retrieves a list items like files, folders, or file groups, in a specified range (shallow enumeration). Declaration Task<IReadOnlyList<IStorageItem>> GetItemsAsync(int startIndex, int maxItemsToRetrieve) Parameters Type Name Description System.Int32 startIndex The zero-based index of the first item in the range. This parameter defaults to 0. System.Int32 maxItemsToRetrieve The maximum number of items to retrieve. Use -1 to retrieve all items. Returns Type Description Task < IReadOnlyList < IStorageItem >> When this method completes successfully, it returns a list (type IVectorView) of items. Each item is the IStorageItem type and represents a file, folder, or file group. In this list, files are represented by StorageFile objects, and folders or file groups are represented by StorageFolder objects."
  },
  "api/XPlat.Storage.StorageFileIOException.html": {
    "href": "api/XPlat.Storage.StorageFileIOException.html",
    "title": "Class StorageFileIOException | XPlat Windows APIs",
    "keywords": "Class StorageFileIOException Inheritance System.Object StorageItemException StorageFileIOException Inherited Members StorageItemException.StorageItemName Namespace : XPlat.Storage Assembly : XPlat.Storage.dll Syntax public sealed class StorageFileIOException : StorageItemException Constructors | Improve this Doc View Source StorageFileIOException(String, String) Declaration public StorageFileIOException(string storageItemName, string message) Parameters Type Name Description System.String storageItemName System.String message | Improve this Doc View Source StorageFileIOException(String, String, Exception) Declaration public StorageFileIOException(string storageItemName, string message, Exception innerException) Parameters Type Name Description System.String storageItemName System.String message Exception innerException"
  },
  "api/XPlat.Storage.StorageItemCreationException.html": {
    "href": "api/XPlat.Storage.StorageItemCreationException.html",
    "title": "Class StorageItemCreationException | XPlat Windows APIs",
    "keywords": "Class StorageItemCreationException Inheritance System.Object StorageItemException StorageItemCreationException Inherited Members StorageItemException.StorageItemName Namespace : XPlat.Storage Assembly : XPlat.Storage.dll Syntax public sealed class StorageItemCreationException : StorageItemException Constructors | Improve this Doc View Source StorageItemCreationException(String, String) Declaration public StorageItemCreationException(string storageItemName, string message) Parameters Type Name Description System.String storageItemName System.String message | Improve this Doc View Source StorageItemCreationException(String, String, Exception) Declaration public StorageItemCreationException(string storageItemName, string message, Exception innerException) Parameters Type Name Description System.String storageItemName System.String message Exception innerException"
  },
  "api/XPlat.Storage.StorageItemException.html": {
    "href": "api/XPlat.Storage.StorageItemException.html",
    "title": "Class StorageItemException | XPlat Windows APIs",
    "keywords": "Class StorageItemException Inheritance System.Object StorageItemException StorageFileIOException StorageItemCreationException StorageItemNotFoundException Namespace : XPlat.Storage Assembly : XPlat.Storage.dll Syntax public class StorageItemException : Exception Constructors | Improve this Doc View Source StorageItemException(String, String) Declaration public StorageItemException(string storageItemName, string message) Parameters Type Name Description System.String storageItemName System.String message | Improve this Doc View Source StorageItemException(String, String, Exception) Declaration public StorageItemException(string storageItemName, string message, Exception innerException) Parameters Type Name Description System.String storageItemName System.String message Exception innerException Properties | Improve this Doc View Source StorageItemName Declaration public string StorageItemName { get; } Property Value Type Description System.String"
  },
  "api/XPlat.Storage.StorageItemNotFoundException.html": {
    "href": "api/XPlat.Storage.StorageItemNotFoundException.html",
    "title": "Class StorageItemNotFoundException | XPlat Windows APIs",
    "keywords": "Class StorageItemNotFoundException Inheritance System.Object StorageItemException StorageItemNotFoundException Inherited Members StorageItemException.StorageItemName Namespace : XPlat.Storage Assembly : XPlat.Storage.dll Syntax public sealed class StorageItemNotFoundException : StorageItemException Constructors | Improve this Doc View Source StorageItemNotFoundException(String, String) Declaration public StorageItemNotFoundException(string storageItemName, string message) Parameters Type Name Description System.String storageItemName System.String message | Improve this Doc View Source StorageItemNotFoundException(String, String, Exception) Declaration public StorageItemNotFoundException(string storageItemName, string message, Exception innerException) Parameters Type Name Description System.String storageItemName System.String message Exception innerException"
  },
  "api/XPlat.Storage.StorageItemTypes.html": {
    "href": "api/XPlat.Storage.StorageItemTypes.html",
    "title": "Enum StorageItemTypes | XPlat Windows APIs",
    "keywords": "Enum StorageItemTypes Describes whether an item that implements the IStorageItem interface is a file or a folder. Namespace : XPlat.Storage Assembly : XPlat.Storage.dll Syntax public enum StorageItemTypes : int Fields Name Description File A file that is represented as a StorageFile instance. Folder A folder that is represented as a StorageFolder instance. None A storage item that is neither a file nor a folder."
  },
  "api/XPlat.Threading.Tasks.html": {
    "href": "api/XPlat.Threading.Tasks.html",
    "title": "Namespace XPlat.Threading.Tasks | XPlat Windows APIs",
    "keywords": "Namespace XPlat.Threading.Tasks Classes TimeoutTask Defines a task that is actioned when the timeout occurs unless cancelled. Structs TaskSchedulerAwaiter Defines an awaiter returned from a ."
  },
  "api/XPlat.Threading.Tasks.TaskSchedulerAwaiter.html": {
    "href": "api/XPlat.Threading.Tasks.TaskSchedulerAwaiter.html",
    "title": "Struct TaskSchedulerAwaiter | XPlat Windows APIs",
    "keywords": "Struct TaskSchedulerAwaiter Defines an awaiter returned from a . Implements INotifyCompletion Namespace : XPlat.Threading.Tasks Assembly : XPlat.Core.dll Syntax public struct TaskSchedulerAwaiter : INotifyCompletion Properties | Improve this Doc View Source IsCompleted Gets a value indicating whether the awaiter is completed. Declaration public readonly bool IsCompleted { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source GetAwaiter() Gets the TaskSchedulerAwaiter . Declaration public TaskSchedulerAwaiter GetAwaiter() Returns Type Description TaskSchedulerAwaiter Returns this instance. | Improve this Doc View Source GetResult() Gets the result. Declaration public void GetResult() | Improve this Doc View Source NewTaskSchedulerAwaiter() Gets a new instance of a TaskSchedulerAwaiter . Declaration public static TaskSchedulerAwaiter NewTaskSchedulerAwaiter() Returns Type Description TaskSchedulerAwaiter An instance of TaskSchedulerAwaiter . | Improve this Doc View Source OnCompleted(Action) Schedules the continuation action that's invoked when the instance completes. Declaration public void OnCompleted(Action completedAction) Parameters Type Name Description Action completedAction The action to invoke when the operation completes. Exceptions Type Condition System.InvalidOperationException Thrown if the task scheduler has been disposed. Implements INotifyCompletion"
  },
  "api/XPlat.Threading.Tasks.TimeoutTask.html": {
    "href": "api/XPlat.Threading.Tasks.TimeoutTask.html",
    "title": "Class TimeoutTask | XPlat Windows APIs",
    "keywords": "Class TimeoutTask Defines a task that is actioned when the timeout occurs unless cancelled. Inheritance System.Object TimeoutTask Namespace : XPlat.Threading.Tasks Assembly : XPlat.Core.dll Syntax public class TimeoutTask : object Constructors | Improve this Doc View Source TimeoutTask(TimeSpan, Action) Initializes a new instance of the TimeoutTask class. Declaration public TimeoutTask(TimeSpan timeout, Action timeoutAction) Parameters Type Name Description TimeSpan timeout The timeout period. Action timeoutAction The action to perform when the timeout occurs. Methods | Improve this Doc View Source Cancel() Cancels the timeout task to prevent the timeout action from occurring. Declaration public void Cancel()"
  },
  "api/XPlat.UI.Color.html": {
    "href": "api/XPlat.UI.Color.html",
    "title": "Struct Color | XPlat Windows APIs",
    "keywords": "Struct Color Describes a color in terms of alpha, red, green, and blue channels. Namespace : XPlat.UI Assembly : XPlat.UI.dll Syntax public struct Color Constructors | Improve this Doc View Source Color(System.Drawing.Color) Declaration public Color(System.Drawing.Color color) Parameters Type Name Description System.Drawing.Color color Properties | Improve this Doc View Source A Gets or sets the sRGB alpha channel value of the color. Declaration public byte A { readonly get; set; } Property Value Type Description System.Byte | Improve this Doc View Source B Gets or sets the sRGB blue channel value of the color. Declaration public byte B { readonly get; set; } Property Value Type Description System.Byte | Improve this Doc View Source G Gets or sets the sRGB green channel value of the color. Declaration public byte G { readonly get; set; } Property Value Type Description System.Byte | Improve this Doc View Source R Gets or sets the sRGB red channel value of the color. Declaration public byte R { readonly get; set; } Property Value Type Description System.Byte Methods | Improve this Doc View Source Equals(Object) Tests whether the specified object is a Color structure and is equivalent to the current color. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The object to compare to the current Color structure. Returns Type Description System.Boolean true if the specified object is a Color structure and is identical to the current Color structure; otherwise, false. | Improve this Doc View Source Equals(Color) Tests whether the specified Color structure is identical to the current color. Declaration public bool Equals(Color other) Parameters Type Name Description Color other The Color structure to compare to the current Color structure. Returns Type Description System.Boolean true if the specified Color structure is identical to the current Color structure; otherwise, false. | Improve this Doc View Source FromArgb(Byte, Byte, Byte, Byte) Creates a new Color structure by using the specified sRGB alpha channel and color channel values. Declaration public static Color FromArgb(byte a, byte r, byte g, byte b) Parameters Type Name Description System.Byte a The alpha channel, A , of the new color. The value must be between 0 and 255. System.Byte r The red channel, R , of the new color. The value must be between 0 and 255. System.Byte g The green channel, G , of the new color. The value must be between 0 and 255. System.Byte b The blue channel, B , of the new color. The value must be between 0 and 255. Returns Type Description Color A Color structure with the specified values. | Improve this Doc View Source GetHashCode() Gets a hash code for the current Color structure. Declaration public override int GetHashCode() Returns Type Description System.Int32 A hash code for the current Color structure. Operators | Improve this Doc View Source Equality(Color, Color) Tests whether two Windows.UI.Color structures are identical. Declaration public static bool operator ==(Color color1, Color color2) Parameters Type Name Description Color color1 The first Windows.UI.Color structure to compare. Color color2 The second Windows.UI.Color structure to compare. Returns Type Description System.Boolean true if color1 and color2 are exactly identical; otherwise, false. | Improve this Doc View Source Implicit(System.Drawing.Color to Color) Declaration public static implicit operator Color(System.Drawing.Color color) Parameters Type Name Description System.Drawing.Color color Returns Type Description Color | Improve this Doc View Source Implicit(Color to System.Drawing.Color) Declaration public static implicit operator System.Drawing.Color(Color color) Parameters Type Name Description Color color Returns Type Description System.Drawing.Color | Improve this Doc View Source Inequality(Color, Color) Tests whether two Windows.UI.Color structures are not identical. Declaration public static bool operator !=(Color color1, Color color2) Parameters Type Name Description Color color1 The first Windows.UI.Color structure to compare. Color color2 The second Windows.UI.Color structure to compare. Returns Type Description System.Boolean true if color1 and color2 are not equal; otherwise, false."
  },
  "api/XPlat.UI.ColorHelper.html": {
    "href": "api/XPlat.UI.ColorHelper.html",
    "title": "Class ColorHelper | XPlat Windows APIs",
    "keywords": "Class ColorHelper Provides static helper methods for processing Color values. C# and Microsoft Visual Basic code should use methods of Color instead. Inheritance System.Object ColorHelper Namespace : XPlat.UI Assembly : XPlat.UI.dll Syntax public class ColorHelper : object Methods | Improve this Doc View Source FromArgb(Byte, Byte, Byte, Byte) Generates a Color structure, based on discrete Byte values for ARGB components. C# and Microsoft Visual Basic code should use Color.FromArgb instead. Declaration public static Color FromArgb(byte a, byte r, byte g, byte b) Parameters Type Name Description System.Byte a The A (transparency) component of the desired color. Range is 0-255. System.Byte r The R component of the desired color. Range is 0-255. System.Byte g The G component of the desired color. Range is 0-255. System.Byte b The B component of the desired color. Range is 0-255. Returns Type Description Color The generated Color value."
  },
  "api/XPlat.UI.Colors.html": {
    "href": "api/XPlat.UI.Colors.html",
    "title": "Class Colors | XPlat Windows APIs",
    "keywords": "Class Colors Implements a set of predefined colors. See Color for usage information. Inheritance System.Object Colors Namespace : XPlat.UI Assembly : XPlat.UI.dll Syntax public class Colors : object Properties | Improve this Doc View Source AliceBlue Gets the color value that represents the AliceBlue named color. Declaration public static Color AliceBlue { get; } Property Value Type Description Color The color value that represents the AliceBlue named color. | Improve this Doc View Source AntiqueWhite Gets the color value that represents the AntiqueWhite named color. Declaration public static Color AntiqueWhite { get; } Property Value Type Description Color The color value that represents the AntiqueWhite named color. | Improve this Doc View Source Aqua Gets the color value that represents the Aqua named color. Declaration public static Color Aqua { get; } Property Value Type Description Color The color value that represents the Aqua named color. | Improve this Doc View Source Aquamarine Gets the color value that represents the Aquamarine named color. Declaration public static Color Aquamarine { get; } Property Value Type Description Color The color value that represents the Aquamarine named color. | Improve this Doc View Source Azure Gets the color value that represents the Azure named color. Declaration public static Color Azure { get; } Property Value Type Description Color The color value that represents the Azure named color. | Improve this Doc View Source Beige Gets the color value that represents the Beige named color. Declaration public static Color Beige { get; } Property Value Type Description Color The color value that represents the Beige named color. | Improve this Doc View Source Bisque Gets the color value that represents the Bisque named color. Declaration public static Color Bisque { get; } Property Value Type Description Color The color value that represents the Bisque named color. | Improve this Doc View Source Black Gets the system-defined color that has the ARGB value of #FF000000. Declaration public static Color Black { get; } Property Value Type Description Color The system-defined color that has the ARGB value of #FF000000. | Improve this Doc View Source BlanchedAlmond Gets the color value that represents the BlanchedAlmond named color. Declaration public static Color BlanchedAlmond { get; } Property Value Type Description Color The color value that represents the BlanchedAlmond named color. | Improve this Doc View Source Blue Gets the system-defined color that has the ARGB value of #FF0000FF. Declaration public static Color Blue { get; } Property Value Type Description Color The system-defined color that has the ARGB value of #FF0000FF. | Improve this Doc View Source BlueViolet Gets the color value that represents the BlueViolet named color. Declaration public static Color BlueViolet { get; } Property Value Type Description Color The color value that represents the BlueViolet named color. | Improve this Doc View Source Brown Gets the system-defined color that has the ARGB value of #FFA52A2A. Declaration public static Color Brown { get; } Property Value Type Description Color The system-defined color that has the ARGB value of #FFA52A2A. | Improve this Doc View Source BurlyWood Gets the color value that represents the BurlyWood named color. Declaration public static Color BurlyWood { get; } Property Value Type Description Color The color value that represents the BurlyWood named color. | Improve this Doc View Source CadetBlue Gets the color value that represents the CadetBlue named color. Declaration public static Color CadetBlue { get; } Property Value Type Description Color The color value that represents the CadetBlue named color. | Improve this Doc View Source Chartreuse Gets the color value that represents the Chartreuse named color. Declaration public static Color Chartreuse { get; } Property Value Type Description Color The color value that represents the Chartreuse named color. | Improve this Doc View Source Chocolate Gets the color value that represents the Chocolate named color. Declaration public static Color Chocolate { get; } Property Value Type Description Color The color value that represents the Chocolate named color. | Improve this Doc View Source Coral Gets the color value that represents the Coral named color. Declaration public static Color Coral { get; } Property Value Type Description Color The color value that represents the Coral named color. | Improve this Doc View Source CornflowerBlue Gets the color value that represents the CornflowerBlue named color. Declaration public static Color CornflowerBlue { get; } Property Value Type Description Color The color value that represents the CornflowerBlue named color. | Improve this Doc View Source Cornsilk Gets the color value that represents the Cornsilk named color. Declaration public static Color Cornsilk { get; } Property Value Type Description Color The color value that represents the Cornsilk named color. | Improve this Doc View Source Crimson Gets the color value that represents the Crimson named color. Declaration public static Color Crimson { get; } Property Value Type Description Color The color value that represents the Crimson named color. | Improve this Doc View Source Cyan Gets the system-defined color that has the ARGB value of #FF00FFFF. Declaration public static Color Cyan { get; } Property Value Type Description Color The system-defined color that has the ARGB value of ##FF00FFFF. | Improve this Doc View Source DarkBlue Gets the color value that represents the DarkBlue named color. Declaration public static Color DarkBlue { get; } Property Value Type Description Color The color value that represents the DarkBlue named color. | Improve this Doc View Source DarkCyan Gets the color value that represents the DarkCyan named color. Declaration public static Color DarkCyan { get; } Property Value Type Description Color The color value that represents the DarkCyan named color. | Improve this Doc View Source DarkGoldenrod Gets the color value that represents the DarkGoldenrod named color. Declaration public static Color DarkGoldenrod { get; } Property Value Type Description Color The color value that represents the DarkGoldenrod named color. | Improve this Doc View Source DarkGray Gets the system-defined color that has the ARGB value of #FFA9A9A9. Declaration public static Color DarkGray { get; } Property Value Type Description Color The system-defined color that has the ARGB value of #FFA9A9A9. | Improve this Doc View Source DarkGreen Gets the color value that represents the DarkGreen named color. Declaration public static Color DarkGreen { get; } Property Value Type Description Color The color value that represents the DarkGreen named color. | Improve this Doc View Source DarkKhaki Gets the color value that represents the DarkKhaki named color. Declaration public static Color DarkKhaki { get; } Property Value Type Description Color The color value that represents the DarkKhaki named color. | Improve this Doc View Source DarkMagenta Gets the color value that represents the DarkMagenta named color. Declaration public static Color DarkMagenta { get; } Property Value Type Description Color The color value that represents the DarkMagenta named color. | Improve this Doc View Source DarkOliveGreen Gets the color value that represents the DarkOliveGreen named color. Declaration public static Color DarkOliveGreen { get; } Property Value Type Description Color The color value that represents the DarkOliveGreen named color. | Improve this Doc View Source DarkOrange Gets the color value that represents the DarkOrange named color. Declaration public static Color DarkOrange { get; } Property Value Type Description Color The color value that represents the DarkOrange named color. | Improve this Doc View Source DarkOrchid Gets the color value that represents the DarkOrchid named color. Declaration public static Color DarkOrchid { get; } Property Value Type Description Color The color value that represents the DarkOrchid named color. | Improve this Doc View Source DarkRed Gets the color value that represents the DarkRed named color. Declaration public static Color DarkRed { get; } Property Value Type Description Color The color value that represents the DarkRed named color. | Improve this Doc View Source DarkSalmon Gets the color value that represents the DarkSalmon named color. Declaration public static Color DarkSalmon { get; } Property Value Type Description Color The color value that represents the DarkSalmon named color. | Improve this Doc View Source DarkSeaGreen Gets the color value that represents the DarkSeaGreen named color. Declaration public static Color DarkSeaGreen { get; } Property Value Type Description Color The color value that represents the DarkSeaGreen named color. | Improve this Doc View Source DarkSlateBlue Gets the color value that represents the DarkSlateBlue named color. Declaration public static Color DarkSlateBlue { get; } Property Value Type Description Color The color value that represents the DarkSlateBlue named color. | Improve this Doc View Source DarkSlateGray Gets the color value that represents the DarkSlateGray named color. Declaration public static Color DarkSlateGray { get; } Property Value Type Description Color The color value that represents the DarkSlateGray named color. | Improve this Doc View Source DarkTurquoise Gets the color value that represents the DarkTurquoise named color. Declaration public static Color DarkTurquoise { get; } Property Value Type Description Color The color value that represents the DarkTurquoise named color. | Improve this Doc View Source DarkViolet Gets the color value that represents the DarkViolet named color. Declaration public static Color DarkViolet { get; } Property Value Type Description Color The color value that represents the DarkViolet named color. | Improve this Doc View Source DeepPink Gets the color value that represents the DeepPink named color. Declaration public static Color DeepPink { get; } Property Value Type Description Color The color value that represents the DeepPink named color. | Improve this Doc View Source DeepSkyBlue Gets the color value that represents the DeepSkyBlue named color. Declaration public static Color DeepSkyBlue { get; } Property Value Type Description Color The color value that represents the DeepSkyBlue named color. | Improve this Doc View Source DimGray Gets the color value that represents the DimGray named color. Declaration public static Color DimGray { get; } Property Value Type Description Color The color value that represents the DimGray named color. | Improve this Doc View Source DodgerBlue Gets the color value that represents the DodgerBlue named color. Declaration public static Color DodgerBlue { get; } Property Value Type Description Color The color value that represents the DodgerBlue named color. | Improve this Doc View Source Firebrick Gets the color value that represents the Firebrick named color. Declaration public static Color Firebrick { get; } Property Value Type Description Color The color value that represents the Firebrick named color. | Improve this Doc View Source FloralWhite Gets the color value that represents the FloralWhite named color. Declaration public static Color FloralWhite { get; } Property Value Type Description Color The color value that represents the FloralWhite named color. | Improve this Doc View Source ForestGreen Gets the color value that represents the ForestGreen named color. Declaration public static Color ForestGreen { get; } Property Value Type Description Color The color value that represents the ForestGreen named color. | Improve this Doc View Source Fuchsia Gets the color value that represents the Fuchsia named color. Declaration public static Color Fuchsia { get; } Property Value Type Description Color The color value that represents the Fuchsia named color. | Improve this Doc View Source Gainsboro Gets the color value that represents the Gainsboro named color. Declaration public static Color Gainsboro { get; } Property Value Type Description Color The color value that represents the Gainsboro named color. | Improve this Doc View Source GhostWhite Gets the color value that represents the GhostWhite named color. Declaration public static Color GhostWhite { get; } Property Value Type Description Color The color value that represents the GhostWhite named color. | Improve this Doc View Source Gold Gets the color value that represents the Gold named color. Declaration public static Color Gold { get; } Property Value Type Description Color The color value that represents the Gold named color. | Improve this Doc View Source Goldenrod Gets the color value that represents the Goldenrod named color. Declaration public static Color Goldenrod { get; } Property Value Type Description Color The color value that represents the Goldenrod named color. | Improve this Doc View Source Gray Gets the system-defined color that has the ARGB value of #FF808080. Declaration public static Color Gray { get; } Property Value Type Description Color The system-defined color that has the ARGB value of #FF808080. | Improve this Doc View Source Green Gets the system-defined color that has the ARGB value of #FF008000. Declaration public static Color Green { get; } Property Value Type Description Color The system-defined color that has the ARGB value of #FF008000. | Improve this Doc View Source GreenYellow Gets the color value that represents the GreenYellow named color. Declaration public static Color GreenYellow { get; } Property Value Type Description Color The color value that represents the GreenYellow named color. | Improve this Doc View Source Honeydew Gets the color value that represents the Honeydew named color. Declaration public static Color Honeydew { get; } Property Value Type Description Color The color value that represents the Honeydew named color. | Improve this Doc View Source HotPink Gets the color value that represents the HotPink named color. Declaration public static Color HotPink { get; } Property Value Type Description Color The color value that represents the HotPink named color. | Improve this Doc View Source IndianRed Gets the color value that represents the IndianRed named color. Declaration public static Color IndianRed { get; } Property Value Type Description Color The color value that represents the IndianRed named color. | Improve this Doc View Source Indigo Gets the color value that represents the Indigo named color. Declaration public static Color Indigo { get; } Property Value Type Description Color The color value that represents the Indigo named color. | Improve this Doc View Source Ivory Gets the color value that represents the Ivory named color. Declaration public static Color Ivory { get; } Property Value Type Description Color The color value that represents the Ivory named color. | Improve this Doc View Source Khaki Gets the color value that represents the Khaki named color. Declaration public static Color Khaki { get; } Property Value Type Description Color The color value that represents the Khaki named color. | Improve this Doc View Source Lavender Gets the color value that represents the Lavender named color. Declaration public static Color Lavender { get; } Property Value Type Description Color The color value that represents the Lavender named color. | Improve this Doc View Source LavenderBlush Gets the color value that represents the LavenderBlush named color. Declaration public static Color LavenderBlush { get; } Property Value Type Description Color The color value that represents the LavenderBlush named color. | Improve this Doc View Source LawnGreen Gets the color value that represents the LawnGreen named color. Declaration public static Color LawnGreen { get; } Property Value Type Description Color The color value that represents the LawnGreen named color. | Improve this Doc View Source LemonChiffon Gets the color value that represents the LemonChiffon named color. Declaration public static Color LemonChiffon { get; } Property Value Type Description Color The color value that represents the LemonChiffon named color. | Improve this Doc View Source LightBlue Gets the color value that represents the LightBlue named color. Declaration public static Color LightBlue { get; } Property Value Type Description Color The color value that represents the LightBlue named color. | Improve this Doc View Source LightCoral Gets the color value that represents the LightCoral named color. Declaration public static Color LightCoral { get; } Property Value Type Description Color The color value that represents the LightCoral named color. | Improve this Doc View Source LightCyan Gets the color value that represents the LightCyan named color. Declaration public static Color LightCyan { get; } Property Value Type Description Color The color value that represents the LightCyan named color. | Improve this Doc View Source LightGoldenrodYellow Gets the color value that represents the LightGoldenrodYellow named color. Declaration public static Color LightGoldenrodYellow { get; } Property Value Type Description Color The color value that represents the LightGoldenrodYellow named color. | Improve this Doc View Source LightGray Gets the system-defined color that has the ARGB value of #FFD3D3D3. Declaration public static Color LightGray { get; } Property Value Type Description Color | Improve this Doc View Source LightGreen Gets the color value that represents the LightGreen named color. Declaration public static Color LightGreen { get; } Property Value Type Description Color The color value that represents the LightGreen named color. | Improve this Doc View Source LightPink Gets the color value that represents the LightPink named color. Declaration public static Color LightPink { get; } Property Value Type Description Color The color value that represents the LightPink named color. | Improve this Doc View Source LightSalmon Gets the color value that represents the LightSalmon named color. Declaration public static Color LightSalmon { get; } Property Value Type Description Color The color value that represents the LightSalmon named color. | Improve this Doc View Source LightSeaGreen Gets the color value that represents the LightSeaGreen named color. Declaration public static Color LightSeaGreen { get; } Property Value Type Description Color The color value that represents the LightSeaGreen named color. | Improve this Doc View Source LightSkyBlue Gets the color value that represents the LightSkyBlue named color. Declaration public static Color LightSkyBlue { get; } Property Value Type Description Color The color value that represents the LightSkyBlue named color. | Improve this Doc View Source LightSlateGray Gets the color value that represents the LightSlateGray named color. Declaration public static Color LightSlateGray { get; } Property Value Type Description Color The color value that represents the LightSlateGray named color. | Improve this Doc View Source LightSteelBlue Gets the color value that represents the LightSteelBlue named color. Declaration public static Color LightSteelBlue { get; } Property Value Type Description Color The color value that represents the LightSteelBlue named color. | Improve this Doc View Source LightYellow Gets the color value that represents the LightYellow named color. Declaration public static Color LightYellow { get; } Property Value Type Description Color The color value that represents the LightYellow named color. | Improve this Doc View Source Lime Gets the color value that represents the Lime named color. Declaration public static Color Lime { get; } Property Value Type Description Color The color value that represents the Lime named color. | Improve this Doc View Source LimeGreen Gets the color value that represents the LimeGreen named color. Declaration public static Color LimeGreen { get; } Property Value Type Description Color The color value that represents the LimeGreen named color. | Improve this Doc View Source Linen Gets the color value that represents the Linen named color. Declaration public static Color Linen { get; } Property Value Type Description Color The color value that represents the Linen named color. | Improve this Doc View Source Magenta Gets the system-defined color that has the ARGB value of #FFFF00FF.. Declaration public static Color Magenta { get; } Property Value Type Description Color The system-defined color that has the ARGB value of #FFFF00FF.. | Improve this Doc View Source Maroon Gets the color value that represents the Maroon named color. Declaration public static Color Maroon { get; } Property Value Type Description Color The color value that represents the Maroon named color. | Improve this Doc View Source MediumAquamarine Gets the color value that represents the MediumAquamarine named color. Declaration public static Color MediumAquamarine { get; } Property Value Type Description Color The color value that represents the MediumAquamarine named color. | Improve this Doc View Source MediumBlue Gets the color value that represents the MediumBlue named color. Declaration public static Color MediumBlue { get; } Property Value Type Description Color The color value that represents the MediumBlue named color. | Improve this Doc View Source MediumOrchid Gets the color value that represents the MediumOrchid named color. Declaration public static Color MediumOrchid { get; } Property Value Type Description Color The color value that represents the MediumOrchid named color. | Improve this Doc View Source MediumPurple Gets the color value that represents the MediumPurple named color. Declaration public static Color MediumPurple { get; } Property Value Type Description Color The color value that represents the MediumPurple named color. | Improve this Doc View Source MediumSeaGreen Gets the color value that represents the MediumSeaGreen named color. Declaration public static Color MediumSeaGreen { get; } Property Value Type Description Color The color value that represents the MediumSeaGreen named color. | Improve this Doc View Source MediumSlateBlue Gets the color value that represents the MediumSlateBlue named color. Declaration public static Color MediumSlateBlue { get; } Property Value Type Description Color The color value that represents the MediumSlateBlue named color. | Improve this Doc View Source MediumSpringGreen Gets the color value that represents the MediumSpringGreen named color. Declaration public static Color MediumSpringGreen { get; } Property Value Type Description Color The color value that represents the MediumSpringGreen named color. | Improve this Doc View Source MediumTurquoise Gets the color value that represents the MediumTurquoise named color. Declaration public static Color MediumTurquoise { get; } Property Value Type Description Color The color value that represents the MediumTurquoise named color. | Improve this Doc View Source MediumVioletRed Gets the color value that represents the MediumVioletRed named color. Declaration public static Color MediumVioletRed { get; } Property Value Type Description Color The color value that represents the MediumVioletRed named color. | Improve this Doc View Source MidnightBlue Gets the color value that represents the MidnightBlue named color. Declaration public static Color MidnightBlue { get; } Property Value Type Description Color The color value that represents the MidnightBlue named color. | Improve this Doc View Source MintCream Gets the color value that represents the MintCream named color. Declaration public static Color MintCream { get; } Property Value Type Description Color The color value that represents the MintCream named color. | Improve this Doc View Source MistyRose Gets the color value that represents the MistyRose named color. Declaration public static Color MistyRose { get; } Property Value Type Description Color The color value that represents the MistyRose named color. | Improve this Doc View Source Moccasin Gets the color value that represents the Moccasin named color. Declaration public static Color Moccasin { get; } Property Value Type Description Color The color value that represents the Moccasin named color. | Improve this Doc View Source NavajoWhite Gets the color value that represents the NavajoWhite named color. Declaration public static Color NavajoWhite { get; } Property Value Type Description Color The color value that represents the NavajoWhite named color. | Improve this Doc View Source Navy Gets the color value that represents the Navy named color. Declaration public static Color Navy { get; } Property Value Type Description Color The color value that represents the Navy named color. | Improve this Doc View Source OldLace Gets the color value that represents the OldLace named color. Declaration public static Color OldLace { get; } Property Value Type Description Color The color value that represents the OldLace named color. | Improve this Doc View Source Olive Gets the color value that represents the Olive named color. Declaration public static Color Olive { get; } Property Value Type Description Color The color value that represents the Olive named color. | Improve this Doc View Source OliveDrab Gets the color value that represents the OliveDrab named color. Declaration public static Color OliveDrab { get; } Property Value Type Description Color The color value that represents the OliveDrab named color. | Improve this Doc View Source Orange Gets the system-defined color that has the ARGB value of #FFFFA500.. Declaration public static Color Orange { get; } Property Value Type Description Color The system-defined color that has the ARGB value of #FFFFA500.. | Improve this Doc View Source OrangeRed Gets the color value that represents the OrangeRed named color. Declaration public static Color OrangeRed { get; } Property Value Type Description Color The color value that represents the OrangeRed named color. | Improve this Doc View Source Orchid Gets the color value that represents the Orchid named color. Declaration public static Color Orchid { get; } Property Value Type Description Color The color value that represents the Orchid named color. | Improve this Doc View Source PaleGoldenrod Gets the color value that represents the PaleGoldenrod named color. Declaration public static Color PaleGoldenrod { get; } Property Value Type Description Color The color value that represents the PaleGoldenrod named color. | Improve this Doc View Source PaleGreen Gets the color value that represents the PaleGreen named color. Declaration public static Color PaleGreen { get; } Property Value Type Description Color The color value that represents the PaleGreen named color. | Improve this Doc View Source PaleTurquoise Gets the color value that represents the PaleTurquoise named color. Declaration public static Color PaleTurquoise { get; } Property Value Type Description Color The color value that represents the PaleTurquoise named color. | Improve this Doc View Source PaleVioletRed Gets the color value that represents the PaleVioletRed named color. Declaration public static Color PaleVioletRed { get; } Property Value Type Description Color The color value that represents the PaleVioletRed named color. | Improve this Doc View Source PapayaWhip Gets the color value that represents the PapayaWhip named color. Declaration public static Color PapayaWhip { get; } Property Value Type Description Color The color value that represents the PapayaWhip named color. | Improve this Doc View Source PeachPuff Gets the color value that represents the PeachPuff named color. Declaration public static Color PeachPuff { get; } Property Value Type Description Color The color value that represents the PeachPuff named color. | Improve this Doc View Source Peru Gets the color value that represents the Peru named color. Declaration public static Color Peru { get; } Property Value Type Description Color The color value that represents the Peru named color. | Improve this Doc View Source Pink Gets the color value that represents the Pink named color. Declaration public static Color Pink { get; } Property Value Type Description Color The color value that represents the Pink named color. | Improve this Doc View Source Plum Gets the color value that represents the Plum named color. Declaration public static Color Plum { get; } Property Value Type Description Color The color value that represents the Plum named color. | Improve this Doc View Source PowderBlue Gets the color value that represents the PowderBlue named color. Declaration public static Color PowderBlue { get; } Property Value Type Description Color The color value that represents the PowderBlue named color. | Improve this Doc View Source Purple Gets the system-defined color that has the ARGB value of #FF800080.. Declaration public static Color Purple { get; } Property Value Type Description Color The system-defined color that has the ARGB value of #FF800080.. | Improve this Doc View Source Red Gets the system-defined color that has the ARGB value of #FFFF0000. Declaration public static Color Red { get; } Property Value Type Description Color The system-defined color that has the ARGB value of #FFFF0000. | Improve this Doc View Source RosyBrown Gets the color value that represents the RosyBrown named color. Declaration public static Color RosyBrown { get; } Property Value Type Description Color The color value that represents the RosyBrown named color. | Improve this Doc View Source RoyalBlue Gets the color value that represents the RoyalBlue named color. Declaration public static Color RoyalBlue { get; } Property Value Type Description Color The color value that represents the RoyalBlue named color. | Improve this Doc View Source SaddleBrown Gets the color value that represents the SaddleBrown named color. Declaration public static Color SaddleBrown { get; } Property Value Type Description Color The color value that represents the SaddleBrown named color. | Improve this Doc View Source Salmon Gets the color value that represents the Salmon named color. Declaration public static Color Salmon { get; } Property Value Type Description Color The color value that represents the Salmon named color. | Improve this Doc View Source SandyBrown Gets the color value that represents the SandyBrown named color. Declaration public static Color SandyBrown { get; } Property Value Type Description Color The color value that represents the SandyBrown named color. | Improve this Doc View Source SeaGreen Gets the color value that represents the SeaGreen named color. Declaration public static Color SeaGreen { get; } Property Value Type Description Color The color value that represents the SeaGreen named color. | Improve this Doc View Source SeaShell Gets the color value that represents the SeaShell named color. Declaration public static Color SeaShell { get; } Property Value Type Description Color The color value that represents the SeaShell named color. | Improve this Doc View Source Sienna Gets the color value that represents the Sienna named color. Declaration public static Color Sienna { get; } Property Value Type Description Color The color value that represents the Sienna named color. | Improve this Doc View Source Silver Gets the color value that represents the Silver named color. Declaration public static Color Silver { get; } Property Value Type Description Color The color value that represents the Silver named color. | Improve this Doc View Source SkyBlue Gets the color value that represents the SkyBlue named color. Declaration public static Color SkyBlue { get; } Property Value Type Description Color The color value that represents the SkyBlue named color. | Improve this Doc View Source SlateBlue Gets the color value that represents the SlateBlue named color. Declaration public static Color SlateBlue { get; } Property Value Type Description Color The color value that represents the SlateBlue named color. | Improve this Doc View Source SlateGray Gets the color value that represents the SlateGray named color. Declaration public static Color SlateGray { get; } Property Value Type Description Color The color value that represents the SlateGray named color. | Improve this Doc View Source Snow Gets the color value that represents the Snow named color. Declaration public static Color Snow { get; } Property Value Type Description Color The color value that represents the Snow named color. | Improve this Doc View Source SpringGreen Gets the color value that represents the SpringGreen named color. Declaration public static Color SpringGreen { get; } Property Value Type Description Color The color value that represents the SpringGreen named color. | Improve this Doc View Source SteelBlue Gets the color value that represents the SteelBlue named color. Declaration public static Color SteelBlue { get; } Property Value Type Description Color The color value that represents the SteelBlue named color. | Improve this Doc View Source Tan Gets the color value that represents the Tan named color. Declaration public static Color Tan { get; } Property Value Type Description Color The color value that represents the Tan named color. | Improve this Doc View Source Teal Gets the color value that represents the Teal named color. Declaration public static Color Teal { get; } Property Value Type Description Color The color value that represents the Teal named color. | Improve this Doc View Source Thistle Gets the color value that represents the Thistle named color. Declaration public static Color Thistle { get; } Property Value Type Description Color The color value that represents the Thistle named color. | Improve this Doc View Source Tomato Gets the color value that represents the Tomato named color. Declaration public static Color Tomato { get; } Property Value Type Description Color The color value that represents the Tomato named color. | Improve this Doc View Source Transparent Gets the system-defined color that has the ARGB value of #00FFFFFF. Declaration public static Color Transparent { get; } Property Value Type Description Color The system-defined color that has the ARGB value of #00FFFFFF. | Improve this Doc View Source Turquoise Gets the color value that represents the Turquoise named color. Declaration public static Color Turquoise { get; } Property Value Type Description Color The color value that represents the Turquoise named color. | Improve this Doc View Source Violet Gets the color value that represents the Violet named color. Declaration public static Color Violet { get; } Property Value Type Description Color The color value that represents the Violet named color. | Improve this Doc View Source Wheat Gets the color value that represents the Wheat named color. Declaration public static Color Wheat { get; } Property Value Type Description Color The color value that represents the Wheat named color. | Improve this Doc View Source White Gets the system-defined color that has the ARGB value of #FFFFFFFF. Declaration public static Color White { get; } Property Value Type Description Color The system-defined color that has the ARGB value of #FFFFFFFF. | Improve this Doc View Source WhiteSmoke Gets the color value that represents the WhiteSmoke named color. Declaration public static Color WhiteSmoke { get; } Property Value Type Description Color The color value that represents the WhiteSmoke named color. | Improve this Doc View Source Yellow Gets the system-defined color that has the ARGB value of #FFFFFF00. Declaration public static Color Yellow { get; } Property Value Type Description Color The system-defined color that has the ARGB value of #FFFFFF00. | Improve this Doc View Source YellowGreen Gets the color value that represents the YellowGreen named color. Declaration public static Color YellowGreen { get; } Property Value Type Description Color The color value that represents the YellowGreen named color."
  },
  "api/XPlat.UI.Controls.html": {
    "href": "api/XPlat.UI.Controls.html",
    "title": "Namespace XPlat.UI.Controls | XPlat Windows APIs",
    "keywords": "Namespace XPlat.UI.Controls Enums Orientation Defines constants that specify the different orientations that a control or layout can have."
  },
  "api/XPlat.UI.Controls.Orientation.html": {
    "href": "api/XPlat.UI.Controls.Orientation.html",
    "title": "Enum Orientation | XPlat Windows APIs",
    "keywords": "Enum Orientation Defines constants that specify the different orientations that a control or layout can have. Namespace : XPlat.UI.Controls Assembly : XPlat.UI.Controls.dll Syntax public enum Orientation : int Fields Name Description Horizontal The control or layout should be horizontally oriented. Vertical The control or layout should be vertically oriented."
  },
  "api/XPlat.UI.Core.CoreDispatcherPriority.html": {
    "href": "api/XPlat.UI.Core.CoreDispatcherPriority.html",
    "title": "Enum CoreDispatcherPriority | XPlat Windows APIs",
    "keywords": "Enum CoreDispatcherPriority Defines the priority for window event dispatches. Namespace : XPlat.UI.Core Assembly : XPlat.UI.Core.dll Syntax public enum CoreDispatcherPriority : int Fields Name Description High High priority. Delegates are invoked immediately for all synchronous requests. Asynchronous requests are queued and processed before any other request type.Do not use this priority level in your app. It is reserved for system events. Using this priority can lead to the starvation of other messages, including system events. Low Low priority. Delegates are processed if there are no higher priority events pending in the queue. Normal Normal priority. Delegates are processed in the order they are scheduled."
  },
  "api/XPlat.UI.Core.DispatchedHandler.html": {
    "href": "api/XPlat.UI.Core.DispatchedHandler.html",
    "title": "Delegate DispatchedHandler | XPlat Windows APIs",
    "keywords": "Delegate DispatchedHandler Represents the method that handles UI thread dispatch events. Namespace : XPlat.UI.Core Assembly : XPlat.UI.Core.dll Syntax public delegate void DispatchedHandler();"
  },
  "api/XPlat.UI.Core.Extensions.CoreDispatcherPriorityExtensions.html": {
    "href": "api/XPlat.UI.Core.Extensions.CoreDispatcherPriorityExtensions.html",
    "title": "Class CoreDispatcherPriorityExtensions | XPlat Windows APIs",
    "keywords": "Class CoreDispatcherPriorityExtensions Inheritance System.Object CoreDispatcherPriorityExtensions Namespace : XPlat.UI.Core.Extensions Assembly : XPlat.UI.Core.dll Syntax public static class CoreDispatcherPriorityExtensions : object"
  },
  "api/XPlat.UI.Core.Extensions.html": {
    "href": "api/XPlat.UI.Core.Extensions.html",
    "title": "Namespace XPlat.UI.Core.Extensions | XPlat Windows APIs",
    "keywords": "Namespace XPlat.UI.Core.Extensions Classes CoreDispatcherPriorityExtensions"
  },
  "api/XPlat.UI.Core.html": {
    "href": "api/XPlat.UI.Core.html",
    "title": "Namespace XPlat.UI.Core | XPlat Windows APIs",
    "keywords": "Namespace XPlat.UI.Core Interfaces ICoreDispatcher Provides the core event message dispatcher. Instances of this type are responsible for processing messages and dispatching the events to the UI thread. Enums CoreDispatcherPriority Defines the priority for window event dispatches. Delegates DispatchedHandler Represents the method that handles UI thread dispatch events."
  },
  "api/XPlat.UI.Core.ICoreDispatcher.html": {
    "href": "api/XPlat.UI.Core.ICoreDispatcher.html",
    "title": "Interface ICoreDispatcher | XPlat Windows APIs",
    "keywords": "Interface ICoreDispatcher Provides the core event message dispatcher. Instances of this type are responsible for processing messages and dispatching the events to the UI thread. Namespace : XPlat.UI.Core Assembly : XPlat.UI.Core.dll Syntax public interface ICoreDispatcher Methods | Improve this Doc View Source Run(CoreDispatcherPriority, DispatchedHandler) Schedules the provided callback on the UI thread from a worker thread without waiting for a result. Declaration void Run(CoreDispatcherPriority priority, DispatchedHandler agileCallback) Parameters Type Name Description CoreDispatcherPriority priority Specifies the priority for event dispatch. DispatchedHandler agileCallback The callback on which the dispatcher returns when the event is dispatched. | Improve this Doc View Source Run(DispatchedHandler) Schedules the provided callback on the UI thread from a worker thread without waiting for a result. Declaration void Run(DispatchedHandler agileCallback) Parameters Type Name Description DispatchedHandler agileCallback The callback on which the dispatcher returns when the event is dispatched. | Improve this Doc View Source RunAsync(CoreDispatcherPriority, DispatchedHandler) Schedules the provided callback on the UI thread from a worker thread, and returns the results asynchronously. Declaration Task RunAsync(CoreDispatcherPriority priority, DispatchedHandler agileCallback) Parameters Type Name Description CoreDispatcherPriority priority Specifies the priority for event dispatch. DispatchedHandler agileCallback The callback on which the dispatcher returns when the event is dispatched. Returns Type Description Task The object that provides handlers for the completed async event dispatch. | Improve this Doc View Source RunAsync(DispatchedHandler) Schedules the provided callback on the UI thread from a worker thread, and returns the results asynchronously. Declaration Task RunAsync(DispatchedHandler agileCallback) Parameters Type Name Description DispatchedHandler agileCallback The callback on which the dispatcher returns when the event is dispatched. Returns Type Description Task The object that provides handlers for the completed async event dispatch."
  },
  "api/XPlat.UI.DispatcherTimer.html": {
    "href": "api/XPlat.UI.DispatcherTimer.html",
    "title": "Class DispatcherTimer | XPlat Windows APIs",
    "keywords": "Class DispatcherTimer Provides a timer that is integrated into the Dispatcher queue, which is processed at a specified interval of time and at a specified priority. Inheritance System.Object DispatcherTimer Implements IDispatcherTimer Namespace : XPlat.UI Assembly : XPlat.UI.dll Syntax public class DispatcherTimer : object, IDispatcherTimer Properties | Improve this Doc View Source Interval Gets or sets the amount of time between timer ticks. Declaration public TimeSpan Interval { get; set; } Property Value Type Description TimeSpan | Improve this Doc View Source IsEnabled Gets a value indicating whether the timer is running. Declaration public bool IsEnabled { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Start() Starts the DispatcherTimer. Declaration public void Start() | Improve this Doc View Source Stop() Stops the DispatcherTimer. Declaration public void Stop() Events | Improve this Doc View Source Tick Occurs when the timer interval has elapsed. Declaration public event EventHandler<object> Tick Event Type Type Description EventHandler < System.Object > Implements IDispatcherTimer"
  },
  "api/XPlat.UI.html": {
    "href": "api/XPlat.UI.html",
    "title": "Namespace XPlat.UI | XPlat Windows APIs",
    "keywords": "Namespace XPlat.UI Classes ColorHelper Provides static helper methods for processing Color values. C# and Microsoft Visual Basic code should use methods of Color instead. Colors Implements a set of predefined colors. See Color for usage information. DispatcherTimer Provides a timer that is integrated into the Dispatcher queue, which is processed at a specified interval of time and at a specified priority. ThicknessHelper Provides helper methods to evaluate or set Thickness values. Structs Color Describes a color in terms of alpha, red, green, and blue channels. Thickness Describes the thickness of a frame around a rectangle. Four Double values describe the Left, Top, Right, and Bottom sides of the rectangle, respectively. Interfaces IDispatcherTimer Provides a timer that is integrated into the Dispatcher queue, which is processed at a specified interval of time and at a specified priority."
  },
  "api/XPlat.UI.IDispatcherTimer.html": {
    "href": "api/XPlat.UI.IDispatcherTimer.html",
    "title": "Interface IDispatcherTimer | XPlat Windows APIs",
    "keywords": "Interface IDispatcherTimer Provides a timer that is integrated into the Dispatcher queue, which is processed at a specified interval of time and at a specified priority. Namespace : XPlat.UI Assembly : XPlat.UI.dll Syntax public interface IDispatcherTimer Properties | Improve this Doc View Source Interval Gets or sets the amount of time between timer ticks. Declaration TimeSpan Interval { get; set; } Property Value Type Description TimeSpan | Improve this Doc View Source IsEnabled Gets a value indicating whether the timer is running. Declaration bool IsEnabled { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Start() Starts the DispatcherTimer. Declaration void Start() | Improve this Doc View Source Stop() Stops the DispatcherTimer. Declaration void Stop() Events | Improve this Doc View Source Tick Occurs when the timer interval has elapsed. Declaration event EventHandler<object> Tick Event Type Type Description EventHandler < System.Object >"
  },
  "api/XPlat.UI.Popups.Extensions.html": {
    "href": "api/XPlat.UI.Popups.Extensions.html",
    "title": "Namespace XPlat.UI.Popups.Extensions | XPlat Windows APIs",
    "keywords": "Namespace XPlat.UI.Popups.Extensions Classes UICommandExtensions"
  },
  "api/XPlat.UI.Popups.Extensions.UICommandExtensions.html": {
    "href": "api/XPlat.UI.Popups.Extensions.UICommandExtensions.html",
    "title": "Class UICommandExtensions | XPlat Windows APIs",
    "keywords": "Class UICommandExtensions Inheritance System.Object UICommandExtensions Namespace : XPlat.UI.Popups.Extensions Assembly : XPlat.UI.Popups.dll Syntax public static class UICommandExtensions : object"
  },
  "api/XPlat.UI.Popups.html": {
    "href": "api/XPlat.UI.Popups.html",
    "title": "Namespace XPlat.UI.Popups | XPlat Windows APIs",
    "keywords": "Namespace XPlat.UI.Popups Classes UICommand Represents a command in a context menu. Interfaces IMessageDialog Represents a dialog for showing messages to the user. IUICommand Represents a command in a context menu or message dialog box. Delegates UICommandInvokedHandler Represents a callback function that handles the event that is fired when the user invokes a context menu command."
  },
  "api/XPlat.UI.Popups.IMessageDialog.html": {
    "href": "api/XPlat.UI.Popups.IMessageDialog.html",
    "title": "Interface IMessageDialog | XPlat Windows APIs",
    "keywords": "Interface IMessageDialog Represents a dialog for showing messages to the user. Namespace : XPlat.UI.Popups Assembly : XPlat.UI.Popups.dll Syntax public interface IMessageDialog Properties | Improve this Doc View Source CancelCommandIndex Gets or sets the index of the command you want to use as the cancel command. This is the command that fires when users perform negative actions such as cancel. Declaration uint CancelCommandIndex { get; set; } Property Value Type Description System.UInt32 | Improve this Doc View Source Commands Gets an array of commands that appear in the command bar of the message dialog. These commands makes the dialog actionable. Declaration IList<IUICommand> Commands { get; } Property Value Type Description IList < IUICommand > | Improve this Doc View Source Content Gets or sets the message to be displayed to the user. Declaration string Content { get; set; } Property Value Type Description System.String | Improve this Doc View Source DefaultCommandIndex Gets or sets the index of the command you want to use as the default. This is the command that fires by default when users perform positive actions such as accept. Declaration uint DefaultCommandIndex { get; set; } Property Value Type Description System.UInt32 | Improve this Doc View Source Title Gets or sets the title to display on the dialog, if any. Declaration string Title { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source ShowAsync() Begins an asynchronous operation showing a dialog. Declaration Task<IUICommand> ShowAsync() Returns Type Description Task < IUICommand > An object that represents the asynchronous operation."
  },
  "api/XPlat.UI.Popups.IUICommand.html": {
    "href": "api/XPlat.UI.Popups.IUICommand.html",
    "title": "Interface IUICommand | XPlat Windows APIs",
    "keywords": "Interface IUICommand Represents a command in a context menu or message dialog box. Namespace : XPlat.UI.Popups Assembly : XPlat.UI.Popups.dll Syntax public interface IUICommand Properties | Improve this Doc View Source Id Gets or sets the identifier of the command. Declaration object Id { get; set; } Property Value Type Description System.Object | Improve this Doc View Source Invoked Gets or sets the handler for the event that is fired when the user invokes the command. Declaration UICommandInvokedHandler Invoked { get; set; } Property Value Type Description UICommandInvokedHandler | Improve this Doc View Source Label Gets or sets the label for the command. Declaration string Label { get; set; } Property Value Type Description System.String"
  },
  "api/XPlat.UI.Popups.UICommand.html": {
    "href": "api/XPlat.UI.Popups.UICommand.html",
    "title": "Class UICommand | XPlat Windows APIs",
    "keywords": "Class UICommand Represents a command in a context menu. Inheritance System.Object UICommand Implements IUICommand Namespace : XPlat.UI.Popups Assembly : XPlat.UI.Popups.dll Syntax public sealed class UICommand : object, IUICommand Constructors | Improve this Doc View Source UICommand() Creates a new instance of the UICommand class. Declaration public UICommand() | Improve this Doc View Source UICommand(String) Creates a new instance of the UICommand class using the specified label. Declaration public UICommand(string label) Parameters Type Name Description System.String label The label for the UICommand. | Improve this Doc View Source UICommand(String, UICommandInvokedHandler) Creates a new instance of the UICommand class using the specified label and event handler. Declaration public UICommand(string label, UICommandInvokedHandler action) Parameters Type Name Description System.String label The label for the new command. UICommandInvokedHandler action The event handler for the new command. | Improve this Doc View Source UICommand(String, UICommandInvokedHandler, Object) Creates a new instance of the UICommand class using the specified label, event handler, and command identifier. Declaration public UICommand(string label, UICommandInvokedHandler action, object commandId) Parameters Type Name Description System.String label The label for the new command. UICommandInvokedHandler action The event handler for the new command. System.Object commandId The command identifier for the new command. Properties | Improve this Doc View Source Id Gets or sets the identifier of the command. Declaration public object Id { get; set; } Property Value Type Description System.Object | Improve this Doc View Source Invoked Gets or sets the handler for the event that is fired when the user selects the UICommand. Declaration public UICommandInvokedHandler Invoked { get; set; } Property Value Type Description UICommandInvokedHandler | Improve this Doc View Source Label Gets or sets the label for the command. Declaration public string Label { get; set; } Property Value Type Description System.String Implements IUICommand"
  },
  "api/XPlat.UI.Popups.UICommandInvokedHandler.html": {
    "href": "api/XPlat.UI.Popups.UICommandInvokedHandler.html",
    "title": "Delegate UICommandInvokedHandler | XPlat Windows APIs",
    "keywords": "Delegate UICommandInvokedHandler Represents a callback function that handles the event that is fired when the user invokes a context menu command. Namespace : XPlat.UI.Popups Assembly : XPlat.UI.Popups.dll Syntax public delegate void UICommandInvokedHandler(IUICommand command); Parameters Type Name Description IUICommand command Represents the invoked command."
  },
  "api/XPlat.UI.Thickness.html": {
    "href": "api/XPlat.UI.Thickness.html",
    "title": "Struct Thickness | XPlat Windows APIs",
    "keywords": "Struct Thickness Describes the thickness of a frame around a rectangle. Four Double values describe the Left, Top, Right, and Bottom sides of the rectangle, respectively. Namespace : XPlat.UI Assembly : XPlat.UI.dll Syntax public struct Thickness Constructors | Improve this Doc View Source Thickness(Double) Initializes a new instance of the Thickness struct. Declaration public Thickness(double uniformLength) Parameters Type Name Description System.Double uniformLength A single length value to apply to all parts of the thickness in pixels. | Improve this Doc View Source Thickness(Double, Double, Double, Double) Initializes a new instance of the Thickness struct. Declaration public Thickness(double left, double top, double right, double bottom) Parameters Type Name Description System.Double left The left value. System.Double top The top value. System.Double right The right value. System.Double bottom The bottom value. Properties | Improve this Doc View Source Bottom Gets or sets the bottom value. Declaration public double Bottom { readonly get; set; } Property Value Type Description System.Double | Improve this Doc View Source Left Gets or sets the left value. Declaration public double Left { readonly get; set; } Property Value Type Description System.Double | Improve this Doc View Source Right Gets or sets the right value. Declaration public double Right { readonly get; set; } Property Value Type Description System.Double | Improve this Doc View Source Top Gets or sets the top value. Declaration public double Top { readonly get; set; } Property Value Type Description System.Double Methods | Improve this Doc View Source Equals(Object) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The object to compare with the current object. Returns Type Description System.Boolean Returns true if the specified object is equal to the current object. | Improve this Doc View Source Equals(Thickness) Checks the equality of the current thickness and the given thickness. Declaration public bool Equals(Thickness other) Parameters Type Name Description Thickness other The other thickness to compare. Returns Type Description System.Boolean Return true if the thickness values are equal. | Improve this Doc View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description System.Int32 A hash code for the current object. | Improve this Doc View Source ToString() Returns the fully qualified type name of this instance. Declaration public override string ToString() Returns Type Description System.String A System.String containing a fully qualified type name. Operators | Improve this Doc View Source Equality(Thickness, Thickness) Checks the equality of two thickness items. Declaration public static bool operator ==(Thickness t1, Thickness t2) Parameters Type Name Description Thickness t1 The thickness 1. Thickness t2 The thickness 2. Returns Type Description System.Boolean Returns true if the thickness values are equal. | Improve this Doc View Source Inequality(Thickness, Thickness) Checks the inequality of two thickness items. Declaration public static bool operator !=(Thickness t1, Thickness t2) Parameters Type Name Description Thickness t1 The thickness 1. Thickness t2 The thickness 2. Returns Type Description System.Boolean Returns true if the thickness values are not equal."
  },
  "api/XPlat.UI.ThicknessHelper.html": {
    "href": "api/XPlat.UI.ThicknessHelper.html",
    "title": "Class ThicknessHelper | XPlat Windows APIs",
    "keywords": "Class ThicknessHelper Provides helper methods to evaluate or set Thickness values. Inheritance System.Object ThicknessHelper Namespace : XPlat.UI Assembly : XPlat.UI.dll Syntax public class ThicknessHelper : object Methods | Improve this Doc View Source FromLengths(Double, Double, Double, Double) Creates a Thickness value based on element values. Declaration public static Thickness FromLengths(double left, double top, double right, double bottom) Parameters Type Name Description System.Double left The initial Left . System.Double top The initial Top . System.Double right The initial Right . System.Double bottom The initial Bottom . Returns Type Description Thickness The created Thickness. | Improve this Doc View Source FromUniformLength(Double) Creates a new Thickness value using a uniform value for all the element values. Declaration public static Thickness FromUniformLength(double uniformLength) Parameters Type Name Description System.Double uniformLength The uniform value to apply to all four of the Thickness element values. Returns Type Description Thickness The created Thickness."
  },
  "articles/available-packages.html": {
    "href": "articles/available-packages.html",
    "title": "Available packages | XPlat Windows APIs",
    "keywords": "Available XPlat packages XPlat Windows APIs are available via NuGet. Each available package is detailed below. We have purposefully split the XPlat Windows APIs to allow you to pick and choose the specific components that your app needs to prevent bloat! Package Current Preview XPlat.ApplicationModel XPlat.ApplicationModel.DataTransfer XPlat.Core XPlat.Device.Display XPlat.Device.Geolocation XPlat.Device.Launcher XPlat.Device.Power XPlat.Device.Profile XPlat.Foundation XPlat.Media.Capture XPlat.Services.Maps XPlat.Storage XPlat.Storage.Pickers XPlat.UI XPlat.UI.Controls XPlat.UI.Core XPlat.UI.Popups"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Overview | XPlat Windows APIs",
    "keywords": "XPlat Windows APIs XPlat Windows APIs are designed to make it easier for developers adjusted to developing with the Windows Runtime APIs (UWP) to take those skills cross-platform with their applications in .NET. As each application platform offers their own unique platform-specific APIs, XPlat attempts to bring all of those APIs under one umbrella using a UWP like API, allowing a developer to learn a single API which works with any application built for Windows and Xamarin for Android and iOS. For a Windows developer, this is appealing as it allows you to easily migrate your existing Windows code to Xamarin shared code with minimal changes through the use of XPlat Windows APIs which mimic the UWP API alternatives. Why should I use this project? You've spent years developing Windows applications and you've been using the Windows Runtime APIs (UWP) to build modern app experiences. Now you want to take your existing apps and skills cross-platform with Xamarin, but you don't know where to start because you don't know what APIs to use! I had this same problem! That's where XPlat Windows APIs started, a set of APIs which mimic those Windows APIs but that are cross-platform, supporting both Android and iOS. Use your existing skills and build epic cross-platform applications."
  },
  "index.html": {
    "href": "index.html",
    "title": "Docs | XPlat Windows APIs",
    "keywords": "Why XPlat Windows APIs? Find yourself with .NET Windows API skills but unsure how to go cross-platform? That's why I started XPlat Windows APIs. This is an API layer for Xamarin Android and iOS application mimicking the equivalent Windows API. So you can build cross-platform applications with the skills you know! Learn more Available packages Take advantage of what is available for XPlat Windows APIs in your applications. You'll discover what packages are available for you from NuGet.org, plus how you can use them. Discover XPlat Contributing Are we missing an API you need in your application? XPlat Windows APIs are available as an open-source project on GitHub! Dive into the codebase and bring your improvements. Get the source Supporting XPlat If you'd like to support our current and future endeavors in open-source projects, considering sponsoring the work we do! Sponsor on GitHub Buy Me A Coffee"
  },
  "README.html": {
    "href": "README.html",
    "title": "XPlat Documentation | XPlat Windows APIs",
    "keywords": "XPlat Documentation This folder contains source code for the generation of XPlat's documentation. Contributing to the docs Install dependencies Download and install docfx on your computer. MacOS brew install docfx Windows choco install docfx Running locally docfx .\\docfx.json --serve This will run the docs on http://localhost:8080"
  }
}